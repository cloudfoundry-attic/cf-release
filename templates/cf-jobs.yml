networks: (( merge ))

meta:
  environment: ~

  release:
    name: cf

  networks:
    z1:
      apps: cf1

    z2:
      apps: cf2

  nfs_server:
    address: (( jobs.nfs_z1.networks.cf1.static_ips.[0] || nil ))
    allow_from_entries:
      - (( .networks.cf1.subnets.[0].range || nil ))
      - (( .networks.cf2.subnets.[0].range || nil ))
    share: ~

  api_templates:
  - name: cloud_controller_ng
    release: (( meta.release.name )) 
  - name: metron_agent
    release: (( meta.release.name ))

  api_worker_templates:
  - name: cloud_controller_worker
    release: (( meta.release.name ))
  - name: metron_agent
    release: (( meta.release.name ))

  clock_templates:
  - name: cloud_controller_clock
    release: (( meta.release.name ))
  - name: metron_agent
    release: (( meta.release.name ))

  nats_templates:
  - name: nats
    release: (( meta.release.name ))
  - name: nats_stream_forwarder
    release: (( meta.release.name ))

  dea_templates:
  - name: dea_next
    release: (( meta.release.name ))
  - name: dea_logging_agent
    release: (( meta.release.name ))
  - name: metron_agent
    release: (( meta.release.name ))

  router_templates:
  - name: gorouter
    release: (( meta.release.name ))
  - name: metron_agent
    release: (( meta.release.name ))

jobs:
  - name: ha_proxy_z1
    templates:
    - name: haproxy
      release: (( meta.release.name ))
    instances: 0
    resource_pool: router_z1
    default_networks:
      - name: cf1
        static_ips: ~
    networks: (( merge || default_networks ))
    properties:
      networks: (( meta.networks.z1 ))
      ha_proxy:
        ssl_pem: ~
      router:
        servers:
          z1: (( jobs.router_z1.networks.cf1.static_ips ))
          z2: (( jobs.router_z2.networks.cf2.static_ips ))

  - name: nats_z1
    templates: (( merge || meta.nats_templates ))
    instances: 1
    resource_pool: medium_z1
    networks:
      - name: cf1
        static_ips: (( merge ))
    properties:
      networks: (( meta.networks.z1 ))

  - name: nats_z2
    templates: (( merge || meta.nats_templates ))
    instances: 1
    resource_pool: medium_z2
    networks:
      - name: cf2
        static_ips: (( merge ))
    properties:
      networks: (( meta.networks.z2 ))

  - name: etcd_z1
    templates:
      - name: etcd
        release: (( meta.release.name ))
      - name: etcd_metrics_server
        release: (( meta.release.name ))
    instances: 2
    persistent_disk: 10024
    resource_pool: medium_z1
    networks:
      - name: cf1
        static_ips: (( merge ))
    properties:
      networks: (( meta.networks.z1 ))

  - name: etcd_z2
    templates:
      - name: etcd
        release: (( meta.release.name ))
      - name: etcd_metrics_server
        release: (( meta.release.name ))
    instances: 1
    persistent_disk: 10024
    resource_pool: medium_z2
    networks:
      - name: cf2
        static_ips: (( merge ))
    properties:
      networks: (( meta.networks.z2 ))

  - name: logs_z1
    templates:
    - name: syslog_aggregator
      release: (( meta.release.name ))
    instances: 0
    resource_pool: medium_z1
    persistent_disk: 100000
    networks:
      - name: cf1
        static_ips: (( merge ))
    properties:
      networks: (( meta.networks.z1 ))

  - name: logs_z2
    templates:
    - name: syslog_aggregator
      release: (( meta.release.name ))
    instances: 0
    resource_pool: medium_z2
    persistent_disk: 100000
    networks:
      - name: cf2
        static_ips: (( merge ))
    properties:
      networks: (( meta.networks.z2 ))

  - name: stats_z1
    templates:
    - name: collector
      release: (( meta.release.name ))
    instances: 1
    resource_pool: small_z1
    networks:
      - name: cf1
    properties:
      networks: (( meta.networks.z1 ))

  - name: nfs_z1
    templates:
    - name: debian_nfs_server
      release: (( meta.release.name ))
    instances: 0
    resource_pool: medium_z1
    persistent_disk: 102400
    networks:
      - name: cf1
        static_ips: ~

  - name: postgres_z1
    templates:
    - name: postgres
      release: (( meta.release.name ))
    instances: 0
    resource_pool: medium_z1
    persistent_disk: 4096
    networks:
    - name: cf1
      static_ips: ~

  - name: uaa_z1
    templates:
    - name: uaa
      release: (( meta.release.name ))
    instances: 1
    resource_pool: medium_z1
    networks:
      - name: cf1
    properties:
      networks: (( meta.networks.z1 ))

  - name: uaa_z2
    templates:
    - name: uaa
      release: (( meta.release.name ))
    instances: 1
    resource_pool: medium_z2
    networks:
      - name: cf2
    properties:
      networks: (( meta.networks.z2 ))

  - name: login_z1
    templates:
    - name: login
      release: (( meta.release.name ))
    instances: 1
    resource_pool: medium_z1
    networks:
      - name: cf1
    properties:
      networks: (( meta.networks.z1 ))

  - name: login_z2
    templates:
    - name: login
      release: (( meta.release.name ))
    instances: 1
    resource_pool: medium_z2
    networks:
      - name: cf2
    properties:
      networks: (( meta.networks.z2 ))

  - name: api_z1
    templates: (( merge || meta.api_templates ))
    instances: 1
    resource_pool: large_z1
    persistent_disk: 0
    networks:
      - name: cf1
    properties:
      networks: (( meta.networks.z1 ))
      metron_agent:
        zone: z1
      nfs_server: (( meta.nfs_server ))

  - name: api_z2
    templates: (( merge || meta.api_templates ))
    instances: 1
    resource_pool: large_z2
    persistent_disk: 0
    networks:
      - name: cf2
    properties:
      networks: (( meta.networks.z2 ))
      metron_agent:
        zone: z2
      nfs_server: (( meta.nfs_server ))

  - name: clock_global
    templates: (( merge || meta.clock_templates ))
    instances: 1
    resource_pool: medium_z1
    persistent_disk: 0
    networks:
      - name: cf1
    properties:
      networks: (( meta.networks.z1 ))
      metron_agent:
        zone: z1

  - name: api_worker_z1
    templates: (( merge || meta.api_worker_templates ))
    instances: 1
    resource_pool: small_z1
    persistent_disk: 0
    networks:
      - name: cf1
    properties:
      networks: (( meta.networks.z1 ))
      metron_agent:
        zone: z1
      nfs_server: (( meta.nfs_server ))

  - name: api_worker_z2
    templates: (( merge || meta.api_worker_templates ))
    instances: 1
    resource_pool: small_z2
    persistent_disk: 0
    networks:
      - name: cf2
    properties:
      networks: (( meta.networks.z2 ))
      metron_agent:
        zone: z2
      nfs_server: (( meta.nfs_server ))

  - name: hm9000_z1
    templates:
    - name: hm9000
      release: (( meta.release.name ))
    instances: 1
    resource_pool: medium_z1
    networks:
      - name: cf1
    properties:
      networks: (( meta.networks.z1 ))

  - name: hm9000_z2
    templates:
    - name: hm9000
      release: (( meta.release.name ))
    instances: 1
    resource_pool: medium_z2
    networks:
      - name: cf2
    properties:
      networks: (( meta.networks.z2 ))

  - name: runner_z1
    templates: (( merge || meta.dea_templates ))
    instances: 1
    update:
      max_in_flight: 1
    resource_pool: runner_z1
    networks:
      - name: cf1
        static_ips: ~
    properties:
      networks: (( meta.networks.z1 ))
      metron_agent:
        zone: z1

  - name: runner_z2
    templates: (( merge || meta.dea_templates ))
    instances: 1
    update:
      max_in_flight: 1
    resource_pool: runner_z2
    networks:
      - name: cf2
        static_ips: ~
    properties:
      networks: (( meta.networks.z2 ))
      metron_agent:
        zone: z2

  - name: loggregator_z1
    templates:
    - name: loggregator
      release: (( meta.release.name ))
    instances: 2
    resource_pool: medium_z1
    networks:
      - name: cf1
        static_ips: (( merge ))
    properties:
      networks: (( meta.networks.z1 ))
      loggregator:
        zone: z1

  - name: loggregator_z2
    templates:
    - name: loggregator
      release: (( meta.release.name ))
    instances: 2
    resource_pool: medium_z2
    networks:
      - name: cf2
        static_ips: (( merge ))
    properties:
      networks: (( meta.networks.z2 ))
      loggregator:
        zone: z2

  - name: loggregator_trafficcontroller_z1
    templates:
    - name: loggregator_trafficcontroller
      release: (( meta.release.name ))
    - name: metron_agent
      release: (( meta.release.name ))
    instances: 1
    resource_pool: small_z1
    networks:
      - name: cf1
        static_ips: (( merge ))
    properties:
      networks: (( meta.networks.z1 ))
      traffic_controller:
        zone: z1
      metron_agent:
        zone: z1

  - name: loggregator_trafficcontroller_z2
    templates:
    - name: loggregator_trafficcontroller
      release: (( meta.release.name ))
    - name: metron_agent
      release: (( meta.release.name ))
    instances: 1
    resource_pool: small_z2
    networks:
      - name: cf2
        static_ips: (( merge ))
    properties:
      networks: (( meta.networks.z2 ))
      traffic_controller:
        zone: z2
      metron_agent:
        zone: z2

  - name: router_z1
    templates: (( merge || meta.router_templates ))
    instances: 1
    resource_pool: router_z1
    networks:
      - name: cf1
        static_ips: (( merge ))
    properties:
      networks: (( meta.networks.z1 ))
      metron_agent:
        zone: z1

  - name: router_z2
    templates: (( merge || meta.router_templates ))
    instances: 1
    resource_pool: router_z2
    networks:
      - name: cf2
        static_ips: (( merge ))
    properties:
      networks: (( meta.networks.z2 ))
      metron_agent:
        zone: z2

  - name: acceptance_tests
    templates:
    - name: acceptance-tests
      release: (( meta.release.name ))
    instances: 0
    resource_pool: small_errand
    lifecycle: errand
    networks:
      - name: cf1

  - name: acceptance_tests_diego
    templates:
    - name: acceptance-tests
      release: (( meta.release.name ))
    instances: 0
    resource_pool: small_errand
    lifecycle: errand
    networks:
      - name: cf1
    properties:
      acceptance_tests:
        diego: true

  - name: smoke_tests
    templates:
    - name: smoke-tests
      release: (( meta.release.name ))
    instances: 0
    resource_pool: small_errand
    lifecycle: errand
    networks:
      - name: cf1

properties:
  dropsonde:
    enabled: true

  support_address: (( merge || "http://support.cloudfoundry.com" ))
  description: (( merge || "Cloud Foundry sponsored by Pivotal" ))
  domain: (( merge ))
  ssl:
    skip_cert_verify: (( merge || false ))
  system_domain: (( domain ))
  system_domain_organization: ~
  app_domains: (( [domain] ))

  disk_quota_enabled: true

  request_timeout_in_seconds: 300

  nats:
    user: (( merge ))
    password: (( merge ))
    address: (( jobs.nats_z2.networks.cf2.static_ips.[0] ))
    port: 4222
    machines: (( jobs.nats_z1.networks.cf1.static_ips jobs.nats_z2.networks.cf2.static_ips ))
    debug: false
    trace: false
    monitor_port: 0
    prof_port: 0

  etcd:
    machines: (( jobs.etcd_z1.networks.cf1.static_ips jobs.etcd_z2.networks.cf2.static_ips ))

  etcd_metrics_server:
    nats:
      machines: (( .properties.nats.machines ))
      username: (( .properties.nats.user ))
      password: (( .properties.nats.password ))

  dea_next:
    memory_mb: (( merge ))
    memory_overcommit_factor: 3
    disk_mb: (( merge ))
    disk_overcommit_factor: 2
    staging_disk_inode_limit: 200000
    instance_disk_inode_limit: 200000
    deny_networks: (( merge || [] ))
    allow_networks: (( merge || [] ))
    kernel_network_tuning_enabled: true
    directory_server_protocol: https
    evacuation_bail_out_time_in_seconds: 600
    logging_level: debug
    staging_disk_limit_mb: 4096
    staging_memory_limit_mb: 1024

  loggregator_endpoint:
    shared_secret: (( merge ))

  metron_endpoint:
    shared_secret: (( .properties.loggregator_endpoint.shared_secret ))

  logger_endpoint: ~

  loggregator:
    maxRetainedLogMessages: 100
    debug: (( merge || false ))
    blacklisted_syslog_ranges: ~

  cc: (( merge ))
  ccdb: (( merge ))

  uaa: (( merge ))
  uaadb: (( merge ))

  databases: ~

  login: (( merge ))

  router:
    status:
      user: (( merge ))
      password: (( merge ))

  syslog_aggregator: ~

  nfs_server: (( meta.nfs_server ))

  collector: (( merge || nil ))

  acceptance_tests: (( merge || nil ))

  smoke_tests: (( merge || nil ))
