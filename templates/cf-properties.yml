meta:
  environment: ~
  default_quota_definitions:
    default:
       memory_limit: 10240
       total_services: 100
       non_basic_services_allowed: true
       total_routes: 1000

properties:
  domain: (( merge ))

  loggregator_endpoint:
    shared_secret: (( merge ))
  cc:
    jobs:
      global:
        timeout_in_seconds: 14400 # 4 hours
      app_bits_packer:
        timeout_in_seconds: ~
      app_events_cleanup:
        timeout_in_seconds: ~
      app_usage_events_cleanup:
        timeout_in_seconds: ~
      blobstore_delete:
        timeout_in_seconds: ~
      blobstore_upload:
        timeout_in_seconds: ~
      droplet_deletion:
        timeout_in_seconds: ~
      droplet_upload:
        timeout_in_seconds: ~
      model_deletion:
        timeout_in_seconds: ~

    app_events:
      cutoff_age_in_days: 31
    app_usage_events:
      cutoff_age_in_days: 31
    audit_events:
      cutoff_age_in_days: 31

    billing_event_writing_enabled: true

    hm9000_noop: false
    diego: false
    default_app_memory: 1024
    maximum_app_disk_in_mb: 2048
    client_max_body_size: 1536M

    srv_api_uri: (( "https://api." domain ))

    bulk_api_password: (( merge ))

    staging_upload_user: (( merge ))
    staging_upload_password: (( merge ))

    db_encryption_key: (( merge ))

    tasks_disabled: false

    disable_custom_buildpacks: false

    broker_client_timeout_seconds: 70

    resource_pool:
      resource_directory_key: (( domain "-cc-resources" ))
      fog_connection: ~
      cdn: ~

    packages:
      app_package_directory_key: (( domain "-cc-packages" ))
      fog_connection: ~
      cdn: ~
      max_package_size: 1073741824

    droplets:
      droplet_directory_key: (( domain "-cc-droplets" ))
      fog_connection: ~
      cdn: ~

    development_mode: false

    newrelic:
      license_key: ~
      environment_name: (( meta.environment ))
      developer_mode: (( cc.development_mode ))
      monitor_mode: (( merge || false ))
      capture_params: (( merge || false ))
      transaction_tracer:
        enabled: (( merge || true ))
        record_sql: (( merge || "obfuscated" ))

    buildpacks:
      buildpack_directory_key: (( domain "-cc-buildpacks" ))
      fog_connection: ~
      cdn: ~
    quota_definitions: (( merge || meta.default_quota_definitions ))
    default_quota_definition: default

    user_buildpacks: (( merge || [] ))
    system_buildpacks: (( merge || default_buildpacks ))
    default_buildpacks:
      - name: java_buildpack
        package: buildpack_java
      - name: ruby_buildpack
        package: buildpack_ruby
      - name: nodejs_buildpack
        package: buildpack_nodejs
      - name: go_buildpack
        package: buildpack_go

    install_buildpacks: (( system_buildpacks user_buildpacks ))

  login:
    analytics:
      code: ~
      domain: ~
    url: ~
    catalina_opts: (( merge ))
    uaa_certificate: ~
    protocol: https
    brand: oss

    smtp:
      host: ~
      port: ~
      user: ~
      password: ~

    links:
      home: (( "https://console." domain ))
      passwd: (( "https://console." domain "/password_resets/new" ))
      signup: (( "https://console." domain "/register" ))
      network: (( "https://network." domain ))
      signup-network: (( "https://network." domain "/registrations/new" ))

  uaa:
    catalina_opts: (( merge ))

    url: (( "https://uaa." domain ))

    no_ssl: false

    scim:
      userids_enabled: (( merge || false ))
      users: (( merge ))

    jwt:
      signing_key: (( merge ))
      verification_key: (( merge ))

    cc:
      client_secret: (( merge ))

    admin:
      client_secret: (( merge ))

    batch:
      username: (( merge ))
      password: (( merge ))
    
    login:
      client_secret: ~
      
    clients:
      <<: (( merge || nil ))
      login:
        override: true
        scope: openid,oauth.approvals
        authorities: oauth.login
        secret: (( merge ))
        authorized-grant-types: authorization_code,client_credentials,refresh_token
        redirect-uri: (( "https://login." domain ))
      developer_console:
        override: true
        scope: openid,cloud_controller.read,cloud_controller.write,password.write,console.admin,console.support
        authorities: scim.write,scim.read,cloud_controller.read,cloud_controller.write,password.write,uaa.admin,uaa.resource,cloud_controller.admin,billing.admin
        secret: (( merge ))
        authorized-grant-types: authorization_code,client_credentials
        access-token-validity: 1209600
        refresh-token-validity: 1209600
        redirect-uri: (( "https://console." domain "/oauth/callback" ))
      app-direct:
        override: true
        authorities: app_direct_invoice.write
        secret: (( merge ))
        authorized-grant-types: authorization_code,client_credentials,password,refresh_token,implicit
        access-token-validity: 1209600
        refresh-token-validity: 1209600
        redirect-uri: (( properties.login.links.home ))
      support-services:
        scope: scim.write,scim.read,openid,cloud_controller.read,cloud_controller.write
        secret: (( merge ))
        authorized-grant-types: authorization_code,client_credentials
        redirect-uri: (( "http://support-signon." domain ))
        authorities: portal.users.read
        access-token-validity: 1209600
        refresh-token-validity: 1209600
      servicesmgmt:
        secret: (( merge ))
        scope: openid,cloud_controller.read,cloud_controller.write
        authorities: uaa.resource,oauth.service,clients.read,clients.write,clients.secret
        authorized-grant-types: authorization_code,client_credentials,password,implicit
        redirect-uri: (( "http://servicesmgmt." domain "/auth/cloudfoundry/callback" ))
        override: true
        autoapprove: true
      space-mail:
        override: true
        authorities: scim.read,scim.write,cloud_controller.admin
        secret: (( merge ))
        authorized-grant-types: client_credentials
        access-token-validity: 1209600
        refresh-token-validity: 1209600
