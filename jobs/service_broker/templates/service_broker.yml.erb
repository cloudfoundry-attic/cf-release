---
cloud_controller_uri: <%= properties.cc.srv_api_uri %>
external_uri: <%= properties.service_broker.external_uri %>
<% if properties.service_broker.ip_route %>
ip_route: <%= properties.service_broker.ip_route %>
<% end %>
index: <%= spec.index %>
logging:
  file: /var/vcap/sys/log/service_broker/service_broker.log
  level: debug
  <% if properties.syslog_aggregator %>
  syslog: vcap.service_broker
  <% end %>
<%
nats_props_name = properties.nats_props || "nats"
nats_props = properties.send(nats_props_name)
nats = "nats://#{nats_props.user}:#{nats_props.password}@#{nats_props.address}:#{nats_props.port}"
cc_api_version = properties.cc_api_version || "v1"
%>
mbus: <%= nats %>
pid: /var/vcap/sys/run/service_broker/service_broker.pid
local_db: sqlite3:/var/vcap/store/service_broker.db

cc_api_version: <%= cc_api_version %>

<% if cc_api_version == "v2" %>
gateway_name: <%= properties.service_broker.gateway_name || "Service Broker" %>
uaa_client_id: <%= properties.uaa_client_id || "vmc" %>
uaa_endpoint: <%= properties.uaa_endpoint %>
uaa_client_auth_credentials:
  username: <%= properties.uaa_client_auth_credentials.username %>
  password: <%= properties.uaa_client_auth_credentials.password %>
service_auth_tokens:
<%
  properties.service_auth_tokens.instance_eval("def fields; @table.keys; end;")
  properties.service_auth_tokens.fields.each { |offering|
    token = properties.service_auth_tokens.send(offering.to_sym)
%>
  <%= offering %>: <%= token %>
<% } %>
<% end %>

token: <%= properties.service_broker.token %>
