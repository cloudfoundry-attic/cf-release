---
<%
service = "redis"
plan_enabled = properties.service_plans && properties.service_plans.send(service.to_sym)
plan = properties.plan || "free"
plan_conf = plan_enabled && properties.service_plans.send(service.to_sym).send(plan.to_sym).configuration
lifecycle = properties.service_lifecycle

supported_versions = properties.redis_node.supported_versions || ["2.2"]

packages = {}
# convention, package contains redis 2.2 is redis22
supported_versions.each{|v| packages[v] = v.sub(".","")}
%>
<% if lifecycle and lifecycle.resque %>
<% snapshot_dir = lifecycle.mount_point || "/var/vcap/services_snapshot" %>
service_name: redis
base_dir: /var/vcap/store/redis/instances
snapshots_base_dir: <%= snapshot_dir %>
serialization_base_dir: <%= snapshot_dir %>
local_db: sqlite3:/var/vcap/store/redis/redis_node.db
tmp_dir: <%= lifecycle.tmp_dir || "/tmp" %>
resque:
  host: <%= lifecycle.resque.host %>
  port: <%= lifecycle.resque.port %>
  password: <%= lifecycle.resque.password %>
  expire: <%= lifecycle.resque.expire %>
logging:
  level: debug
  file: /var/vcap/sys/log/redis_node/redis_worker.log
  <% if properties.syslog_aggregator %>
  syslog: vcap.redis_worker
  <% end %>
index: <%= spec.index %>
node_id: <%= "#{service}_node_#{plan}_#{spec.index}" %>
download_url_template: "http://<%= lifecycle.download_url %>/serialized/%{service}/%{name}/snapshots/%{snapshot_id}?token=%{token}"
snapshot_quota: <%= plan_enabled && plan_conf.lifecycle && plan_conf.lifecycle.snapshot && plan_conf.lifecycle.snapshot.quota || 0 %>
# optional download tuning
serialization:
  max_download_size_mb: <%= properties.service_lifecycle.serialization_max_download_size || 10 %>
# addtional options
command_rename_prefix: <%= properties.redis_node.command_rename_prefix || "magic-protect-command-prefix" %>
gzip_bin: /bin/gzip
redis_server_path:
<% for version in supported_versions %>
  <%= "'#{version}': /var/vcap/packages/redis#{packages[version]}/bin/redis-server" %>
<% end %>
service_log_dir: /var/vcap/sys/service-log/redis
service_script_dir: /var/vcap/jobs/redis_node_ng/bin
service_bin_dir:
<% for version in supported_versions %>
  <%= "'#{version}': /var/vcap/packages/redis#{packages[version]}" %>
<% end %>
image_dir: /var/vcap/store/redis_image
max_memory: <%= plan_enabled && plan_conf.max_memory || 16 %>
memory_overhead: <%= plan_enabled && plan_conf.memory_overhead || 20 %>
filesystem_quota: <%= plan_enabled && plan_conf.filesystem_quota || "false" %>
persistent: <%= plan_enabled && plan_conf.persistent || false %>
service_start_timeout: 3
<% end %>
