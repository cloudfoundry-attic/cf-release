---
<%
service = "redis"
plan_enabled = properties.service_plans && properties.service_plans.send(service.to_sym)
plan = properties.plan || "free"
plan_conf = plan_enabled && properties.service_plans.send(service.to_sym).send(plan.to_sym).configuration
max_clients = plan_enabled && plan_conf.max_clients || 200
# Use 2 times to Make sure the open files number limitation
# is large enough to support connection quota,
# the default limitation is 1024
nofile = max_clients * 2 if max_clients * 2 > 1024
%>
server:
  container_klass: Warden::Container::Linux
  container_grace_time: ~
  container_rootfs_path: /var/vcap/data/warden/rootfs
  container_depot_path: /var/vcap/store/containers
  unix_domain_permissions: 0777
  <% if nofile %>
  container_rlimits:
    nofile: <%= nofile %>
    # Redis-server forks a process to do dump,
    # so also increase the maximum number of processes,
    # the default limitation is 1024
    nproc: <%= nofile %>
  <% end %>
  quota:
    disk_quota_enabled: false
logging:
  file: /var/vcap/sys/log/warden/warden.log
  <% if properties.syslog_aggregator %>
  syslog: vcap.services.redis.warden
  <% end %>
  level: debug
network:
  pool_start_address: 10.254.0.0
  pool_size: 4096
user:
  pool_start_uid: 10000
  pool_size: 4096
