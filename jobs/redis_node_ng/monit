<%
node = properties.redis_node
health_check_port = node.health_check_port || 2345
%>
check process redis_warden
  with pidfile /var/vcap/sys/run/warden/redis_warden.pid
  start program "/var/vcap/jobs/redis_node_ng/bin/warden_ctl start"
    with timeout 120 seconds
  stop program "/var/vcap/jobs/redis_node_ng/bin/warden_ctl stop"
  if failed host 127.0.0.1 port <%= health_check_port %> protocol http
    and request '/'
    with timeout 5 seconds for 2 cycles
  then restart
  group vcap
  group warden

check process redis_node
  with pidfile /var/vcap/sys/run/redis_node/redis_node.pid
  start program "/var/vcap/jobs/redis_node_ng/bin/redis_node_ctl start"
  stop program "/var/vcap/jobs/redis_node_ng/bin/redis_node_ctl stop" with timeout 60 seconds
  group vcap
  group node
  depends on redis_warden

<%
service = "redis"
plan_enabled = properties.service_plans && properties.service_plans.send(service.to_sym)
plan = properties.plan || "free"
plan_conf = plan_enabled && properties.service_plans.send(service.to_sym).send(plan.to_sym).configuration
if properties.service_lifecycle and plan_enabled and plan_conf.lifecycle and plan_conf.lifecycle.enable
  worker_count = plan_conf.lifecycle.worker_count || 1
  worker_count.times do |ind|
%>
check process redis_worker_<%= ind %>
  with pidfile /var/vcap/sys/run/redis_node/redis_worker_<%= ind %>.pid
  start program "/var/vcap/jobs/redis_node_ng/bin/redis_worker_ctl start <%= ind %>"
  stop program "/var/vcap/jobs/redis_node_ng/bin/redis_worker_ctl stop <%= ind %>"
  group worker
  group vcap
  depends on redis_node
<%
  end
end
%>
