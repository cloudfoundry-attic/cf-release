#!/bin/bash -e

RUN_DIR=/var/vcap/sys/run/gorouter
LOG_DIR=/var/vcap/sys/log/gorouter
PIDFILE=$RUN_DIR/gorouter.pid

source /var/vcap/packages/common/utils.sh

case $1 in

  start)
    pid_guard $PIDFILE "gorouter"

    mkdir -p $RUN_DIR
    mkdir -p $LOG_DIR

    chown -R vcap:vcap $RUN_DIR
    chown -R vcap:vcap $LOG_DIR

    <% if p("dropsonde.enabled") %>
    export DROPSONDE_ORIGIN=<%= name %>/<%= index %>
    export DROPSONDE_DESTINATION=<%= p("metron_endpoint.host") %>:<%= p("metron_endpoint.dropsonde_port") %>
    <% end %>

    echo $$ > $PIDFILE

    if running_in_container; then
        echo "Not setting /proc/sys/net/ipv4 parameters, since I'm running inside a linux container"
    else
        # Ephemeral port range
        echo "1024 65535" > /proc/sys/net/ipv4/ip_local_port_range

        # TCP_FIN_TIMEOUT
        # This setting determines the time that must elapse before TCP/IP can release a closed connection and reuse
        # its resources. During this TIME_WAIT state, reopening the connection to the client costs less than establishing
        # a new connection. By reducing the value of this entry, TCP/IP can release closed connections faster, making more
        # resources available for new connections. Addjust this in the presense of many connections sitting in the
        # TIME_WAIT state:

        echo 5 > /proc/sys/net/ipv4/tcp_fin_timeout

        # TCP_TW_RECYCLE
        # It enables fast recycling of TIME_WAIT sockets. The default value is 0 (disabled). The sysctl documentation
        # incorrectly states the default as enabled. It can be changed to 1 (enabled) in many cases. Known to cause some
        # issues with hoststated (load balancing and fail over) if enabled, should be used with caution.

        echo 1 > /proc/sys/net/ipv4/tcp_tw_recycle

        # TCP_TW_REUSE
        # This allows reusing sockets in TIME_WAIT state for new connections when it is safe from protocol viewpoint.
        # Default value is 0 (disabled). It is generally a safer alternative to tcp_tw_recycle

        echo 1 > /proc/sys/net/ipv4/tcp_tw_reuse
    fi

    # Allow a few more queued connections than are allowed by default
    echo 1024 > /proc/sys/net/core/somaxconn

    # Allowed number of open file descriptors
    ulimit -n 100000

    (crontab -l | sed /gorouter.*logrotate/d; cat /var/vcap/jobs/gorouter/config/gorouter_logrotate.cron) | sed /^$/d | crontab

    setcap cap_net_bind_service=+ep /var/vcap/packages/gorouter/bin/gorouter

    exec chpst -u vcap:vcap /var/vcap/packages/gorouter/bin/gorouter \
         -c /var/vcap/jobs/gorouter/config/gorouter.yml

    ;;

  stop)
    kill_and_wait $PIDFILE

    ;;

  *)
    echo "Usage: gorouter_ctl {start|stop}"

    ;;

esac
