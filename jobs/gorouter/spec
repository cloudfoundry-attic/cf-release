---
name: gorouter

description: "The Router maintains a list of live routes for the applications running on each DEA. The Router load balances requests (based on their Host header) between each application instance registered for a specific route. It requires to be behind a load balancer that can terminate SSL connections."

templates:
  gorouter_ctl.erb: bin/gorouter_ctl
  dns_health_check.erb: bin/dns_health_check
  gorouter.yml.erb: config/gorouter.yml
  gorouter_logrotate.cron.erb: config/gorouter_logrotate.cron
  logrotate.conf.erb: config/logrotate.conf
  drain: bin/drain
  cert.pem.erb: config/cert.pem
  key.pem.erb: config/key.pem

packages:
  - common
  - gorouter

properties:
  router.port:
    description: "Listening Port for Router."
    default: 80
  router.status.port:
    description: "Port for the Router varz/status endpoint."
    default: 8080
  router.status.user:
    description: "Username for HTTP basic auth to the varz/status endpoint."
  router.status.password:
    description: "Password for HTTP basic auth to the varz/status endpoint."
  router.requested_route_registration_interval_in_seconds:
    description: "Interval at which the router requests routes to be registered."
    default: 20
  router.number_of_cpus:
    description: "Number of CPUs to utilize, the default (-1) will equal the number of available CPUs"
    default: -1
  router.debug_addr:
    description: "Address at which to serve debug info"
    default: "0.0.0.0:17001"
  router.secure_cookies:
    description: "Set secure flag on http cookies"
    default: false
  router.enable_ssl:
    description: "Enable ssl termination on the router"
    default: false
  router.enable_routing_api:
    description: "Enable the GoRouter to receive routes from the Routing API"
    default: true
  router.ssl_cert:
    description: "The public ssl cert for ssl termination"
    default: ""
  router.ssl_key:
    description: "The private ssl key for ssl termination"
    default: ""
  router.ssl_skip_validation:
    description: "Skip SSL client cert validation"
    default: false
  router.cipher_suites:
    description: "Valid ssl cipher suites, golang tls constants separated by commas"
    default: TLS_RSA_WITH_RC4_128_SHA:TLS_RSA_WITH_AES_128_CBC_SHA:TLS_RSA_WITH_AES_256_CBC_SHA:TLS_ECDHE_ECDSA_WITH_RC4_128_SHA:TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256:TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA:TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA:TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256:TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA:TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA:TLS_ECDHE_RSA_WITH_RC4_128_SHA
  router.route_service_secret:
    description: "A base64 encoded key, the key length should be 16 bytes for AES-128, 24 for AES-192, or 32 for AES-256"
    default: ""
  router.route_service_secret_prev:
    description: "A base64 encoded key, the key length should be 16 bytes for AES-128, 24 for AES-192, or 32 for AES-256. This should be used to rotate the route_service_secret without downtime."
    default: ""
  router.route_service_timeout:
    description: "Expiry time of a route service signature in seconds"
    default: 60
  router.logrotate.freq_min:
    description: "The frequency in minutes which logrotate will rotate VM logs"
    default: 5
  router.logrotate.rotate:
    description: "The number of files that logrotate will keep around on the VM"
    default: 7
  router.logrotate.size:
    description: "The size at which logrotate will decide to rotate the log file"
    default: 2M
  router.extra_headers_to_log:
    description: "A list of headers that log events will be annotated with"
    default: []

  nats.user:
    description:
  nats.password:
    description:
  nats.port:
    description:
  nats.machines:
    description: "IP of each NATS cluster member."
  router.offset:
    description:
    default: 0
  router.trace_key:
    description:
      If the X-Vcap-Trace request header is set and has this value,
      trace headers are added to the response.
    default: 22
  request_timeout_in_seconds:
    description: "Timeout in seconds for Router -> Endpoint roundtrip."
    default: 900
  metron_endpoint.host:
    description: "The host used to emit messages to the Metron agent."
    default: "127.0.0.1"
  metron_endpoint.dropsonde_port:
    description: "The port used to emit dropsonde messages to the Metron agent."
    default: 3457
  metron_endpoint.port:
    description: "The port used to emit legacy messages to the Metron agent."
    default: 3456
  metron_endpoint.shared_secret:
    description: "The key used to sign log messages."
  dropsonde.enabled:
    default: false
    description: "Enable the dropsonde emitter library"
  
  uaa.clients.gorouter.secret:
    description: "Password for UAA client for the gorouter."
  uaa.port:
    description: "Port on which UAA is running."
    default: 8080

  routing-api.port:
    description: "Port on which routing-api is running."
    default: 3000
