#deployment sds nginx.conf
user  vcap vcap;
worker_processes  1;

error_log /var/vcap/sys/log/nginx/nginx.error.log;
pid       /var/vcap/sys/run/nginx/nginx.pid;

events {
  worker_connections  8192;
  use epoll;
}

http {
  include       mime.types;
  default_type  text/html;
  server_tokens off;

  log_format main  '$host - [$time_local] '
                   '"$request" $status $bytes_sent '
                   '"$http_referer" "$http_user_agent" '
                   '$remote_addr response_time:$upstream_response_time';

  access_log  /var/vcap/sys/log/nginx/nginx.access.log  main;

  sendfile             on;  #enable use of sendfile()
  tcp_nopush           on;
  tcp_nodelay          on;  #disable nagel's algorithm

  keepalive_timeout  75 20; #inherited from router

  gzip  on;
  gzip_min_length    1250;
  gzip_buffers       16 8k;
  gzip_comp_level    2;
  gzip_proxied       any;
  gzip_types         text/plain text/css application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
  gzip_vary	       on;
  gzip_disable "MSIE [1-6]\.(?!.*SV1)";

  client_max_body_size 256M; #already enforced upstream/but doesn't hurt.

<%
  sds = properties.serialization_data_server
  if sds && sds.use_nginx
    sds_port = sds.port || 8080
%>
  upstream serialization_data_server {
    server 127.0.0.1:20000;
  }

  server {
    listen    *:<%=sds_port%>;
    server_name  _;

    #proxy and log all SDS traffic
    location / {
      access_log /var/vcap/sys/log/nginx/nginx.access.log  main;
      proxy_pass                 http://serialization_data_server;
    }

<%
  lifecycle = properties.service_lifecycle
  if lifecycle and lifecycle.resque
    snapshot_dir = lifecycle.mount_point || "/var/vcap/services_snapshot"
%>
    location /protected {
      internal;
      alias <%= snapshot_dir%>;
    }
<% end %>

    location ~ /serialized/.*/.*/serialized/data {
      upload_pass @sds_uploads;
      upload_pass_args on;

      # Store files to this directory
      upload_store /var/vcap/data/serialization_data_server/tmp/uploads;

      # No limit for output body forwarded to SDS
      upload_max_output_body_len 0;

      # Allow uploaded files to be read only by user
      # upload_store_access user:r;

      # Set specified fields in request body
      upload_set_form_field "${upload_field_name}_name" $upload_file_name;
      upload_set_form_field "${upload_field_name}_path" $upload_tmp_path;

      upload_pass_form_field "^_method$";

      #on any error, delete uploaded files.
      upload_cleanup 400-505;
    }

    location @sds_uploads {
      proxy_pass http://serialization_data_server;
    }

  }
 <% end %>
}
