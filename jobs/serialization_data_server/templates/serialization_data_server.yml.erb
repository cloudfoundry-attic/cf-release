---
<%
lifecycle = properties.service_lifecycle
sds = properties.serialization_data_server
sds_port = sds.port || 8080
if lifecycle and lifecycle.resque
  snapshot_dir = lifecycle.mount_point || "/var/vcap/services_snapshot"
nats_props_name = properties.nats_props || "nats"
nats_props = properties.send(nats_props_name) || OpenStruct.new
nats = "nats://#{nats_props.user}:#{nats_props.password}@#{nats_props.address}:#{nats_props.port}"
%>
serialization_base_dir: <%= snapshot_dir %>
pid: /var/vcap/sys/run/serialization_data_server/serialization_data_server.pid
mbus: <%= nats %>
<% if sds and sds.ip_route %>
ip_route: <%= sds.ip_route %>
<% end %>
cloud_controller_uri: <%= properties.cc.srv_api_uri %>
external_uri: <%= lifecycle.download_url %>
<% if sds and sds.upload_token %>
upload_token: <%=sds.upload_token %>
<% end %>
<% if sds and sds.upload_file_expire_time %>
expire_time: <%= sds.upload_file_expire_time %>
<% end %>
<% if sds and sds.purge_expired_interval %>
purge_expired_interval: <%= sds.purge_expired_interval %>
<% end %>
<% if sds and sds.purge_num %>
purge_num: <%= sds.purge_num %>
<% end %>
<% if sds and sds.use_nginx %>
port: 20000
nginx:
  nginx_path: /protected
  nginx_port: <%=sds_port%>
<% else %>
port: <%=sds_port%>
<% end %>

logging:
  level: debug
  file: /var/vcap/sys/log/serialization_data_server/serialization_data_server.log
  <% if properties.syslog_aggregator %>
  syslog: vcap.serialization_data_server
  <% end %>
redis:
  host: <%= lifecycle.resque.host %>
  port: <%= lifecycle.resque.port %>
  password: <%= lifecycle.resque.password %>
  expire: <%= lifecycle.resque.expire %>
index: <%= spec.index %>
<% end %>
