---
<%
service = "postgresql"
plan_enabled = properties.service_plans && properties.service_plans.send(service.to_sym)
plan = properties.plan || "free"
plan_conf = plan_enabled && properties.service_plans.send(service.to_sym).send(plan.to_sym).configuration
%>
<% if properties.service_lifecycle and properties.service_lifecycle.resque %>
  <% snapshot_dir = properties.service_lifecycle.mount_point || "/var/vcap/services_snapshot" %>
service_name: postgresql
snapshots_base_dir: <%= snapshot_dir %>
serialization_base_dir: <%= snapshot_dir %>
local_db: sqlite3:/var/vcap/store/postgresql_node.db
tmp_dir: <%= properties.service_lifecycle.tmp_dir || "/tmp" %>
resque:
  host: <%= properties.service_lifecycle.resque.host %>
  port: <%= properties.service_lifecycle.resque.port %>
  password: <%= properties.service_lifecycle.resque.password %>
  expire: <%= properties.service_lifecycle.resque.expire %>
logging:
  level: debug
  file: /var/vcap/sys/log/postgresql_node/postgresql_worker.log
  <% if properties.syslog_aggregator %>
  syslog: vcap.postgresql_worker
  <% end %>
index: <%= spec.index %>
node_id: <%= "#{service}_node#{'_' + plan if plan != 'free'}_#{spec.index.to_i + 1}" %>
download_url_template: "http://<%= properties.service_lifecycle.download_url %>/serialized/#{service}/#{name}?token=#{token}"
snapshot_quota: <%= plan_enabled && plan_conf.lifecycle && plan_conf.lifecycle.snapshot_quota || 0 %>
# addtional options
postgresql:
  host: 127.0.0.1
  port: 5432
  user: vcap
  pass: vcap
  database: postgres
restore_bin: /var/vcap/packages/postgresql/bin/pg_restore
dump_bin: /var/vcap/packages/postgresql/bin/pg_dump
<% end %>
