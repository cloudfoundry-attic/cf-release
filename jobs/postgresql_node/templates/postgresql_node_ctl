#!/bin/bash
export PATH=/var/vcap/packages/ruby/bin:$PATH

PG_ADMIN_USER=<%= properties.postgresql_node.admin_user || "pg_admin" %>
PG_ADMIN_GROUP=<%= properties.postgresql_node.admin_group || "admin" %>
PG_ADMIN_PASSWD_HASH=<%= properties.postgresql_node.admin_passwd_hash || "" %>

RUN_DIR=/var/vcap/sys/run/postgresql_node
LOG_DIR=/var/vcap/sys/log/postgresql_node
JOB_DIR=/var/vcap/jobs/postgresql_node
PIDFILE=$RUN_DIR/postgresql_node.pid

<%
migration = properties.service_migration
lifecycle = properties.service_lifecycle
%>

MIG_DIR=<%= migration && migration.mount_point || "/var/vcap/services_migration" %>
<% if lifecycle and lifecycle.nfs_server %>
SNAPSHOT_DIR=<%= lifecycle.mount_point || "/var/vcap/services_snapshot" %>
MT_OPTS="-t nfs"
MT_EXPORT=<%= lifecycle.nfs_server.address %>:<%= lifecycle.nfs_server.export_dir %>
<% end %>

source /var/vcap/packages/common/utils.sh

case $1 in

  start)
    pid_guard $PIDFILE "PostgreSQL node"

    mkdir -p $RUN_DIR
    mkdir -p $LOG_DIR

    echo $$ > $PIDFILE

    if [ -n "$PG_ADMIN_PASSWD_HASH" ]; then
      # do a mod in addition to the add in order to support password changes
      USER_ARGS="-g $PG_ADMIN_GROUP -p $PG_ADMIN_PASSWD_HASH $PG_ADMIN_USER"
      /usr/sbin/useradd -m -s /bin/bash $USER_ARGS
      /usr/sbin/usermod $USER_ARGS
    fi

    <% if properties.syslog_aggregator %>
    /var/vcap/packages/syslog_aggregator/setup_syslog_forwarder.sh $JOB_DIR/config
    <% end %>

    mkdir -p $MIG_DIR

    <% if lifecycle %>
    mkdir -p $SNAPSHOT_DIR
    check_mount "$MT_OPTS" "$MT_EXPORT" "$SNAPSHOT_DIR"
    <% end %>

    chmod +x $JOB_DIR/config/postgresql_backup
    $JOB_DIR/config/postgresql_backup start

    exec /var/vcap/packages/postgresql_node/services/postgresql/bin/postgresql_node \
         -c $JOB_DIR/config/postgresql_node.yml \
         >>$LOG_DIR/postgresql_node.stdout.log \
         2>>$LOG_DIR/postgresql_node.stderr.log

    ;;

  stop)
    kill_and_wait $PIDFILE

    chmod +x $JOB_DIR/config/postgresql_backup
    $JOB_DIR/config/postgresql_backup stop
    <% if lifecycle %>
    umount $SNAPSHOT_DIR
    <% end %>

    ;;

  *)
    echo "Usage: $0 {start|stop}"

    ;;

esac
