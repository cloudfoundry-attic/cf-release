---
<%
service = "postgresql"
plan_enabled = properties.service_plans && properties.service_plans.send(service.to_sym)
plan = properties.plan || "free"
plan_conf = plan_enabled && properties.service_plans.send(service.to_sym).send(plan.to_sym).configuration
node = properties.postgresql_node
supported_versions = node.supported_versions
default_version = node.default_version
warden = plan_enabled && plan_conf.warden
use_warden = warden && warden.enable
version_configs = {
  '9.0' => {
    'port'        => 5432,
    'binary_dir'  => '/var/vcap/packages/postgresql',
  },

  '9.1' => {
    'port'        => 5433,
    'binary_dir'  => '/var/vcap/packages/postgresql91',
  }
}
nats_props_name = properties.nats_props || "nats"
nats_props = properties.send(nats_props_name) || OpenStruct.new
nats = "nats://#{nats_props.user}:#{nats_props.password}@#{nats_props.address}:#{nats_props.port}"
%>
capacity: <%= plan_enabled && plan_conf.capacity || 200 %>
plan: '<%= plan %>'
local_db: sqlite3:/var/vcap/store/postgresql_node.db
<%
if use_warden
%>
base_dir: /var/vcap/store/postgresql_data
<%else%>
base_dir: /var/vcap/store/postgresql
<%end%>
mbus: <%= nats %>
index: <%= spec.index %>
logging:
  level: debug
  file: /var/vcap/sys/log/postgresql_node/postgresql_node.log
  <% if properties.syslog_aggregator %>
  syslog: vcap.postgresql_node
  <% end %>
pid: /var/vcap/sys/run/postgresql_node/postgresql_node.pid
node_id: <%= "#{service}_node_#{plan}_#{spec.index}" %>
supported_versions: <%= "['#{supported_versions.join("' , '")}']" %>
default_version: <%= "'#{default_version}'"%>

max_db_size: <%= plan_enabled && plan_conf.max_db_size || 128 %>
max_long_query: <%= plan_enabled && plan_conf.max_long_query || 3 %>
max_long_tx: <%= plan_enabled && plan_conf.max_long_tx || 0 %>
max_db_conns: <%= plan_enabled && plan_conf.max_clients || 20 %>
postgresql:
<% for version in supported_versions
     config = version_configs[version]
%>
  '<%= version %>':
   host: 127.0.0.1
   user: vcap
   pass: vcap
   port: <%= config['port'] %>
   database: postgres
   dump_bin: <%= "#{config['binary_dir']}/bin/pg_dump" %>
   restore_bin: <%= "#{config['binary_dir']}/bin/pg_restore" %>
<% end %>

<% if node.ip_route %>
ip_route: <%= node.ip_route %>
<% end %>
migration_nfs: <%= properties.service_migration && properties.service_migration.mount_point ? properties.service_migration.mount_point : "/var/vcap/services_migration" %>
z_interval: <%= node.z_interval || 30 %>
max_nats_payload: <%= nats_props.max_payload || 1048576 %>
fqdn_hosts: <%= properties.services && properties.services.fqdn_hosts || "false" %>
op_time_limit: <%= node.op_time_limit || 6 %>
<%if use_warden %>
max_disk: <%= plan_enabled && plan_conf.max_disk || 128 %>
use_warden: true
warden:
  service_log_dir: /var/vcap/sys/service-log/postgresql
  service_script_dir: /var/vcap/jobs/postgresql_node_ng/bin
  service_conf_dir: /var/vcap/jobs/postgresql_node_ng/config
  service_bin_dir:
  <% for version in supported_versions %>
    '<%= version %>': <%= "#{version_configs[version]['binary_dir']}" %>
  <% end %>
  image_dir: /var/vcap/store/postgresql_image
  service_start_timeout: <%= warden.servie_start_timeout || 3 %>
  filesystem_quota: <%= warden.filesystem_quota || "false" %>
<% if warden.clean_image_cache %>
  clean_image_cache: true
  clean_image_cache_interval: <%= warden.clean_image_cache_interval || 3 %>
<% end %>
  port_range:
    first: 15000
    last: 25000
<%end%>
m_interval: <%= node.m_interval || 10 %>
<% if node.m_actions %>
m_actions:
<% node.m_actions.each do |act| %>
  - <%= act %>
<% end %>
<% end %>
