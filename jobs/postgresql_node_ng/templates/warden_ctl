#!/bin/bash
<%
service = "postgresql"
plan_enabled = properties.service_plans && properties.service_plans.send(service.to_sym)
plan = properties.plan || "free"
plan_conf = plan_enabled && properties.service_plans.send(service.to_sym).send(plan.to_sym).configuration
%>
JOB_DIR=/var/vcap/jobs/postgresql_node_ng
PKG_DIR=/var/vcap/packages/postgresql_node_ng
PG_DIR=/var/vcap/packages/postgresql

source $PKG_DIR/common/services/utils.sh

case $1 in

  start)
    echo "Setup warden."
    setup_warden

    <% if plan_conf && plan_conf.shmmax %>
    sysctl -w 'kernel.shmmax=<%=plan_conf.shmmax%>'
    <%else%>
    sysctl -w 'kernel.shmmax=284934144'
    <%end%>

    <% if plan_conf && plan_conf.shmall%>
    sysctl -w 'kernel.shmall=<%=plan_conf.shmall%>'
    <%end%>

    for version in "9.0" "9.1"
    do
      case "$version" in
        "9.0")
          PG_DIR=/var/vcap/packages/postgresql
          ;;
        "9.1")
          PG_DIR=/var/vcap/packages/postgresql91
          ;;
      esac

      INITDB_DIR=$ROOT_DIR/$PG_DIR/initdb

      echo "Initialize the postgresql $version database cluster"
      install -m 0755 -d $ROOT_DIR/$PG_DIR

      echo "Sync binaries and initialized data"
      rm -rf $INITDB_DIR
      rsync -arl $PG_DIR/* $ROOT_DIR/$PG_DIR/

      if test ! -d $INITDB_DIR/base
      then
        echo "Fail to initialize the postgresql $version database cluster, check the error log."
        exit 1
      fi

      mkdir -p $INITDB_DIR/pg_log
      # initdb direcotry cloud not be modified by non-root users.
      chmod -R 755 $INITDB_DIR
    done
    chmod -R 755 $JOB_DIR/bin

    echo "Starting warden."
    start_warden
    ;;

  stop)
    kill_and_wait $PIDFILE
    ;;

  *)
    echo "Usage: warden_ctl {start|stop}"
    ;;

esac
