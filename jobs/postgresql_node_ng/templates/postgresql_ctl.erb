#!/bin/bash
<%
service = "postgresql"
plan_enabled = properties.service_plans && properties.service_plans.send(service.to_sym)
plan = properties.plan || "free"
plan_conf = plan_enabled && properties.service_plans.send(service.to_sym).send(plan.to_sym).configuration
%>
PACKAGE_DIR=/var/vcap/packages/postgresql
DATA_DIR=/var/vcap/store/postgresql
RUN_DIR=/var/vcap/sys/run/postgresql
PIDFILE=$RUN_DIR/postgresql.pid
LOG_DIR=/var/vcap/sys/log/postgresql

FIRST_TIME=0

source /var/vcap/packages/common/utils.sh

case "$1" in
  start)
    pid_guard $PIDFILE "PostgreSQL"

    mkdir -p $RUN_DIR
    echo $$ > $PIDFILE # Satisfy Monit in case of slow start
    <% if plan_conf && plan_conf.shmmax %>
    sysctl -w 'kernel.shmmax=<%=plan_conf.shmmax%>'
    <%else%>
    sysctl -w 'kernel.shmmax=284934144'
    <%end%>

    <% if plan_conf && plan_conf.shmall%>
    sysctl -w 'kernel.shmall=<%=plan_conf.shmall%>'
    <%end%>

    if [ ! -d $DATA_DIR -o ! -f $DATA_DIR/postgresql.conf ]; then
      FIRST_TIME=1
      mkdir -p $DATA_DIR
      chown vcap:vcap $DATA_DIR

      su - vcap -c "LD_LIBRARY_PATH=$PACKAGE_DIR/lib:$LD_LIBRARY_PATH $PACKAGE_DIR/bin/initdb -E utf8 -D $DATA_DIR"

      if [ $? != 0 ]; then
        echo "ERROR: Unable to initialize PostgreSQL DB"
        exit 1
      fi

      echo "host all all 0.0.0.0/0 md5" >> $DATA_DIR/pg_hba.conf

      # set listening address if supplied
      <% if properties.postgresql_server && properties.postgresql_server.listen_address %>
        sed -i "s/#listen_addresses\( *\)=\( *\)'localhost'/listen_addresses\1=\2'<%= properties.postgresql_server.listen_address %>'/" $DATA_DIR/postgresql.conf
      <% else %>
        sed -i "s/#listen_addresses\( *\)=\( *\)'localhost'/listen_addresses\1=\2'*'/" $DATA_DIR/postgresql.conf
      <% end %>
    fi

    # since postgresql service is alive
    # log dir change should cover both clean deploy and upgrade push
    if [ ! -d $LOG_DIR ]; then
      mkdir -p $LOG_DIR
      chown vcap:vcap $LOG_DIR
    fi
    sed -i "/log_directory/ {s/#log_directory/log_directory/;s/pg_log/\/var\/vcap\/sys\/log\/postgresql/}" $DATA_DIR/postgresql.conf
    # disable built-in log rotator
    sed -i "s/^[\w|#]*logging_collector = .*/logging_collector = off/" $DATA_DIR/postgresql.conf

    # pg global max connections
    # this can be updated by re-deployment rather than the first initialization
    <% if properties.postgresql_server && properties.postgresql_server.max_connections %>
    sed -i "s/^max_connections =.*/max_connections = <%= properties.postgresql_server.max_connections %>/" $DATA_DIR/postgresql.conf
    <% end %>

    # set adjustable configurations per plan
    <% adjustable_configs = %w(max_connections shared_buffers effective_cache_size work_mem temp_buffers checkpoint_segments) %>
    <% adjustable_configs.each do |config| %>
      <% if plan_conf && plan_conf.respond_to?(config.to_sym) && plan_conf.send(config.to_sym) %>
    sed -i "s/^[\w|#]*<%=config%> = .*/<%=config%> = <%=plan_conf.send(config.to_sym)%>/" $DATA_DIR/postgresql.conf
      <% end %>
    <% end %>

    # stop psql from adding timestamps to its log file names
    sed -i "/log_filename/ {s/#log_filename/log_filename/;s/postgresql-%Y-%m-%d_%H%M%S.log/postgresql.log/}" $DATA_DIR/postgresql.conf

    echo "Starting PostgreSQL 9.0: "
    su - vcap -c "LD_LIBRARY_PATH=$PACKAGE_DIR/lib:$LD_LIBRARY_PATH $PACKAGE_DIR/bin/pg_ctl -w start -D $DATA_DIR -l \"$LOG_DIR/startup.log\""

    if [ $? == 0 ]; then
      echo "PostgreSQL 9.0 started successfully"
      head -n 1 $DATA_DIR/postmaster.pid > $PIDFILE
      if [ $FIRST_TIME -eq 1 ]; then
        # Setup contrib packages
        for sqlf in citext.sql fuzzystrmatch.sql isn.sql ltree.sql pageinspect.sql pg_buffercache.sql pgcrypto.sql pg_freespacemap.sql sslinfo.sql tablefunc.sql uuid-ossp.sql
        do
          echo "Installing contrib package ${sqlf}"
          ${PACKAGE_DIR}/bin/psql -U vcap -f ${PACKAGE_DIR}/share/${sqlf} -d postgres
        done
      fi
    else
      rm $PIDFILE
      echo "The PostgreSQL server start seems to have some problems, please see logs for details."
      exit 1
    fi

    ;;

  stop)
    echo "Stopping PostgreSQL 9.0: "
    su - vcap -c "LD_LIBRARY_PATH=$PACKAGE_DIR/lib:$LD_LIBRARY_PATH $PACKAGE_DIR/bin/pg_ctl stop -m fast -w -D $DATA_DIR"
    wait_pidfile $PIDFILE

    ;;

  status)
    su - vcap -c "LD_LIBRARY_PATH=$PACKAGE_DIR/lib:$LD_LIBRARY_PATH $PACKAGE_DIR/bin/pg_ctl status -D $DATA_DIR"

    ;;

  *)
    echo "Usage: $0 {start|stop|status}"
    exit 1

    ;;

esac
