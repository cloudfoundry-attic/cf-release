<%
service = "postgresql"
plan_enabled = properties.service_plans && properties.service_plans.send(service.to_sym)
plan = properties.plan || "free"
plan_conf = plan_enabled && properties.service_plans.send(service.to_sym).send(plan.to_sym).configuration
use_warden= plan_conf.warden && plan_conf.warden.enable

node = properties.postgresql_node
health_check_port = node.health_check_port || 2345
supported_versions = node.supported_versions
version_configs = {
  '9.0' => {
    'name'    => 'postgresql',
    'pid'     => '/var/vcap/sys/run/postgresql/postgresql.pid',
  },

  '9.1' => {
    'name'    => 'postgresql91',
    'pid'     => '/var/vcap/sys/run/postgresql/postgresql91.pid',
  }
}
%>
<% if use_warden %>
check process postgresql_warden
  with pidfile /var/vcap/sys/run/warden/postgresql_warden.pid
  start program "/var/vcap/jobs/postgresql_node_ng/bin/warden_ctl start"
    with timeout 120 seconds
  stop program "/var/vcap/jobs/postgresql_node_ng/bin/warden_ctl stop"
  if failed host 127.0.0.1 port <%= health_check_port %>  protocol http
    and request '/'
    with timeout 5 seconds for 2 cycles
  then restart
  group vcap
  group warden
<% else %>
<% supported_versions.each do |version| %>
check process <%= version_configs[version]['name'] %>
  with pidfile <%= version_configs[version]['pid'] %>
  start program "/var/vcap/jobs/postgresql_node_ng/bin/postgresql_ctl '<%= version %>' start"
  stop program "/var/vcap/jobs/postgresql_node_ng/bin/postgresql_ctl '<%= version %>' stop"
  group vcap
<% end %>
<% end %>

check process postgresql_node
  with pidfile  /var/vcap/sys/run/postgresql_node/postgresql_node.pid
  start program "/var/vcap/jobs/postgresql_node_ng/bin/postgresql_node_ctl start"
  stop  program "/var/vcap/jobs/postgresql_node_ng/bin/postgresql_node_ctl stop" with timeout 60 seconds
  group vcap
  group node
<%if use_warden %>
  depends on postgresql_warden
<% else %>
  <% supported_versions.each do |version|  %>
  depends on <%= version_configs[version]['name'] %>
  <% end %>
<%end%>
<%
if properties.service_lifecycle and plan_enabled and plan_conf.lifecycle and plan_conf.lifecycle.enable
  worker_count = plan_conf.lifecycle.worker_count || 1
  worker_count.times do |ind|
%>
check process postgresql_worker_<%= ind %>
  with pidfile /var/vcap/sys/run/postgresql_node/postgresql_worker_<%= ind %>.pid
  start program "/var/vcap/jobs/postgresql_node_ng/bin/postgresql_worker_ctl start <%= ind %>"
  stop program "/var/vcap/jobs/postgresql_node_ng/bin/postgresql_worker_ctl stop <%= ind %>"
  group worker
  group vcap
  depends on postgresql_node
<% if use_warden %>
  depends on postgresql_warden
<% else %>
  <% supported_versions.each do |version|  %>
  depends on <%= version_configs[version]['name'] %>
  <% end %>
<% end %>
<%
  end
end
%>
