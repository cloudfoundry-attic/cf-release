---
<%
service = "mongodb"
plan_enabled = properties.service_plans && properties.service_plans.send(service.to_sym)
plan = properties.plan || "free"
plan_conf = plan_enabled && properties.service_plans.send(service.to_sym).send(plan.to_sym).configuration
backup_enabled = plan_enabled && plan_conf.backup && plan_conf.backup.enable
# backward compatible, fallback to 1.8 if old manifest file can't supply supported versions
default_version = properties.mongodb_node.default_version
supported_versions = properties.mongodb_node.supported_versions || ["1.8"]
packages = {}
# convention, package contains mongodb 1.8 is mongodb18
supported_versions.each{|v| packages[v] = v.sub(".","")}
%>
service_name: mongodb
backup_base_dir: <%= properties.service_backup && properties.service_backup.mount_point || "/var/vcap/services_backup" %>
base_dir: /var/vcap/store/mongodb
image_dir: /var/vcap/store/mongodb_image
service_log_dir: /var/vcap/sys/service-log/mongodb
service_script_dir: /var/vcap/jobs/mongodb_node_ng/bin
service_conf_dir: /var/vcap/jobs/mongodb_node_ng/config
service_bin_dir:
<% for version in supported_versions %>
  <%= "'#{version}': /var/vcap/packages/mongodb#{packages[version]}" %>
<% end %>
supported_versions: <%= "['#{supported_versions.join("' , '")}']" %>
default_version: <%= "'#{default_version}'"%>
mongodump_path:
<% for version in supported_versions %>
  <%= "'#{version}': /var/vcap/packages/mongodb#{packages[version]}/bin/mongodump" %>
<% end %>
logging:
  level: debug
  file: /var/vcap/sys/log/mongodb_node/mongodb_backup.log
  <% if properties.syslog_aggregator %>
  syslog: vcap.mongodb_backup
  <% end %>
local_db: sqlite3:/var/vcap/store/mongodb_node.db
timeout: <%= backup_enabled && plan_conf.backup.timeout || 600 %>
pid: /var/vcap/sys/run/mongodb_node/mongodb_backup.pid
