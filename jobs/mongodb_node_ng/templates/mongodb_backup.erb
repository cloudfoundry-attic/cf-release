#!/bin/bash
<%
service = "mongodb"
plan_enabled = properties.service_plans && properties.service_plans.send(service.to_sym)
plan = properties.plan || "free"
plan_conf = plan_enabled && properties.service_plans.send(service.to_sym).send(plan.to_sym).configuration

backup_enabled = plan_enabled && plan_conf.backup && plan_conf.backup.enable
service_backup = properties.service_backup
nfs_server = service_backup && service_backup.nfs_server
first_node_only = backup_enabled && plan_conf.backup.first_node_only
%>

<% if backup_enabled && nfs_server && (!first_node_only || spec.index == 0) %>
PIDFILE=/var/vcap/sys/run/mongodb_node/mongodb_backup.pid
MOUNT_POINT=<%= service_backup.mount_point || "/var/vcap/services_backup" %>
MT_OPTS="-t nfs"
MT_EXPORT=<%= nfs_server.address %>:<%= nfs_server.export_dir %>

source /var/vcap/packages/common/utils.sh

case $1 in
  start)
    mkdir -p $MOUNT_POINT
    check_mount "$MT_OPTS" "$MT_EXPORT" "$MOUNT_POINT"
    (crontab -l | sed /mongodb_backup/d; cat /var/vcap/jobs/mongodb_node_ng/config/mongodb_backup.cron) | sed /^$/d | crontab

    ;;

  stop)
    crontab -l | sed /mongodb_backup/d | crontab
    kill_and_wait $PIDFILE
    umount $MOUNT_POINT

    ;;

  *)
    echo "Usage: mongodb_backup {start|stop}"

    ;;

esac
<% else %>
echo "Backup is disabled"
<% end %>
