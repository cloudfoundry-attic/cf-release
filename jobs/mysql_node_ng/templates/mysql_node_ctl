#!/bin/bash
<%
service = "mysql"
migration = properties.service_migration
lifecycle = properties.service_lifecycle

plan_enabled = properties.service_plans && properties.service_plans.send(service.to_sym)
plan = properties.plan || "free"
if plan_enabled
  plan_conf = properties.service_plans.send(service.to_sym).send(plan.to_sym).configuration
  capacity = plan_conf.capacity || -1
  warden = plan_conf.warden
  use_warden = warden && warden.enable
end
%>
export PATH=/var/vcap/packages/ruby/bin:$PATH

COMMON_DIR=/var/vcap/store/mysql_common
RUN_DIR=/var/vcap/sys/run/mysql_node
LOG_DIR=/var/vcap/sys/log/mysql_node
PIDFILE=$RUN_DIR/mysql_node.pid
JOB_DIR=/var/vcap/jobs/mysql_node_ng
MY_LD_FILE=/etc/ld.so.conf.d/mysql.conf
MIG_DIR=<%= migration && migration.mount_point || "/var/vcap/services_migration" %>
<% if lifecycle and lifecycle.nfs_server %>
SNAPSHOT_DIR=<%= lifecycle.mount_point || "/var/vcap/services_snapshot" %>
MT_OPTS="-t nfs"
MT_EXPORT=<%= lifecycle.nfs_server.address %>:<%= lifecycle.nfs_server.export_dir %>
<% end %>

source /var/vcap/packages/common/utils.sh

case $1 in

  start)
    pid_guard $PIDFILE "MySQL node"

    <% if plan_enabled && capacity > 0 && use_warden %>
    # enlarge aio-max-nr since the default value may
    # not enough to start all mysql instances
    capacity=<%= capacity %>
    aio_nr_per_instance=2661
    buffer=100
    expected_nr=$((capacity * aio_nr_per_instance + buffer))
    aio_max_file="/proc/sys/fs/aio-max-nr"

    if [ -e $aio_max_file ] && [ "$expected_nr" -gt "$(cat $aio_max_file)" ]; then
      echo $expected_nr > $aio_max_file
      echo "Tuning aio-max-nr to $expected_nr"
    fi
    <% end %>

    mkdir -p $RUN_DIR
    mkdir -p $LOG_DIR

    echo $$ > $PIDFILE

    <% if properties.syslog_aggregator %>
    /var/vcap/packages/syslog_aggregator/setup_syslog_forwarder.sh $JOB_DIR/config
    <% end %>

    echo "/var/vcap/packages/mysqlclient/lib/mysql" > $MY_LD_FILE
    echo "/var/vcap/packages/mysql/lib/mysql" >> $MY_LD_FILE

    /sbin/ldconfig

    mkdir -p $MIG_DIR
    <% if lifecycle && lifecycle.nfs_server %>
    mkdir -p $SNAPSHOT_DIR
    check_mount "$MT_OPTS" "$MT_EXPORT" "$SNAPSHOT_DIR"
    <% end %>

    chmod +x $JOB_DIR/config/mysql_backup
    $JOB_DIR/config/mysql_backup start

    mkdir -p $COMMON_DIR/bin
    mkdir -p $COMMON_DIR/config
    rsync -arl $JOB_DIR/bin/warden_service_ctl $COMMON_DIR/bin
    rsync -arl $JOB_DIR/bin/my*.shutdown $COMMON_DIR/bin
    rsync -arl /var/vcap/packages/common/utils.sh $COMMON_DIR/bin
    chmod -R 755 $COMMON_DIR/bin
    rsync $JOB_DIR/config/my*.cnf $COMMON_DIR/config
    rsync $JOB_DIR/config/warden_mysql_init $COMMON_DIR/config
    chmod 755 $COMMON_DIR/config
    chmod 644 $COMMON_DIR/config/*

    exec /var/vcap/packages/mysql_node_ng/services/ng/mysql/bin/mysql_node \
         -c $JOB_DIR/config/mysql_node.yml \
         >>$LOG_DIR/mysql_node.stdout.log \
         2>>$LOG_DIR/mysql_node.stderr.log

    ;;

  stop)
    kill_and_wait $PIDFILE 60

    chmod +x $JOB_DIR/config/mysql_backup
    $JOB_DIR/config/mysql_backup stop
    <% if lifecycle && lifecycle.nfs_server %>
    umount $SNAPSHOT_DIR
    <% end %>

    rm $MY_LD_FILE
    /sbin/ldconfig

    ;;

  *)
    echo "Usage: mysql_node_ctl {start|stop}"

    ;;

esac
