<% if_p("syslog_aggregator.address", "syslog_aggregator.port") do |address, port| %>
$ModLoad omrelp
$ModLoad imuxsock                       # local message reception (rsyslog uses a datagram socket)
$MaxMessageSize 4k                      # default is 2k

$ModLoad imudp                          # the java log4j appender only works with udp
$UDPServerRun 514
$WorkDirectory /var/vcap/sys/rsyslog/buffered # where messages should be buffered on disk

# Forward vcap messages to the aggregator
#
$ActionResumeRetryCount -1
$ActionResumeInterval 5
$ActionQueueType LinkedList
$ActionQueueFileName agg_backlog
$ActionQueueMaxDiskSpace 32m
$ActionQueueLowWaterMark 2000
$ActionQueueHighWaterMark 8000
$ActionQueueSaveOnShutdown on
$ActionQueueTimeoutEnqueue 1000

<% ip = `hostname -I | cut -d' ' -f1` %>
template(name="CfLogTemplate" type="list") {
        constant(value="<")
        property(name="pri")
        constant(value=">")
        property(name="timestamp" dateFormat="rfc3339")
        constant(value=" <%= ip.strip %> ")
        property(name="programname")
        constant(value=" [job=")
        property(name="programname")
        constant(value=" index=<%= spec.index.to_i %>] ")
        property(name="msg")
}

:programname, startswith, "vcap." :omrelp:<%= address %>:<%= port %>;CfLogTemplate

# Log vcap messages locally, too
#$template VcapComponentLogFile, "/var/log/%programname:6:$%/%programname:6:$%.log"
#$template VcapComponentLogFormat, "%timegenerated% %syslogseverity-text% -- %msg%\n"
#:programname, startswith, "vcap." -?VcapComponentLogFile;VcapComponentLogFormat

# Prevent them from reaching anywhere else
:programname, startswith, "vcap." ~
<% end %>
