---
<%
service = "filesystem"
gateway = eval("properties.#{service}_gateway")
acls = gateway.acls
nats_props_name = properties.nats_props || "nats"
nats_props = properties.send(nats_props_name) || OpenStruct.new
nats = "nats://#{nats_props.user}:#{nats_props.password}@#{nats_props.address}:#{nats_props.port}"
%>
mbus: <%= nats %>
index: <%= spec.index %>

cloud_controller_uri: <%= properties.cc.srv_api_uri %>

service:
  name: filesystem
  version: "1.0"
  description: 'Persistent filesystem service'
  plans: ['free']
  default_plan: '<%= gateway.default_plan || 'free' %>'
  tags: ['Persistent filesystem service']
  timeout: <%= properties.filesystem_gateway.service_timeout || 10 %>
<% if acls %>
  <% if acls.is_a? String %>
  acls: <%= acls %>
  <% else %>
    <% acls.plans.instance_eval("def fields; @table.keys; end;") if acls && acls.plans %>
  acls:
    <%= "users: ['#{acls.users.join("', '")}']" if acls.users %>
    <%= "wildcards: ['#{acls.wildcards.join("', '")}']" if acls.wildcards %>
    <% if acls.plans %>
    plans:
      <% acls.plans.fields.each do |plan|%>
      <%= "#{plan}:"%>
        <%= "users: ['#{acls.plans.send(plan.to_sym).users.join("', '")}']" if acls.plans.send(plan.to_sym).users %>
        <%= "wildcards: ['#{acls.plans.send(plan.to_sym).wildcards.join("', '")}']" if acls.plans.send(plan.to_sym).wildcards %>
      <% end %>
    <% end %>
  <% end %>
<% end %>

<% if gateway.ip_route %>
ip_route: <%= gateway.ip_route %>
<% end %>
token: <%= properties.filesystem_gateway.token %>

logging:
  file: /var/vcap/sys/log/filesystem_gateway/filesystem_gateway.log
  level: debug
  <% if properties.syslog_aggregator %>
  syslog: vcap.filesystem_gateway
  <% end %>

pid: /var/vcap/sys/run/filesystem_gateway/filesystem_gateway.pid

fs_type: nfs
backends:
<% for backend in gateway.backends %>
  - host: <%= backend.host %>
    export: <%= backend.export %>
    mount: <%= backend.mount %>
<% end %>
