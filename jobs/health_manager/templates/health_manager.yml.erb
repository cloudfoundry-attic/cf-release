---
<% db = properties.ccdb.databases.find { |db| db.tag == "cc" } %>
<% db_role = properties.ccdb.roles.find { |role| role.tag == "admin" } %>
<% network = spec.networks.send(properties.networks.apps) %>
<% nats = properties.nats %>

local_route: <%= network.ip %>
mbus: nats://<%= nats.user %>:<%= nats.password %>@<%= nats.address %>:<%= nats.port %>
logging:
  file: /var/vcap/sys/log/health_manager/health_manager.log
  <% if properties.syslog_aggregator %>
  syslog: vcap.health_manager
  <% end %>
  level: info
pid: /var/vcap/sys/run/health_manager/health_manager.pid
rails_environment: production
index: <%= spec.index %>
database_environment:
  production:
    database: <%= db.name %>
    host: <%= properties.ccdb.address %>
    port: <%= properties.ccdb.port %>
    encoding: utf8
    username: <%= db_role.name %>
    password: <%= db_role.password %>
    pool: <%= properties.ccdb.pool_size %>
    timeout: 2000
    template: template0 # Required for utf8 encoding
    adapter: postgresql
intervals:
  <% intervals = properties.health_manager && properties.health_manager.intervals || OpenStruct.new %>
  database_scan:         <%= intervals.database_scan         ||  60 %>
  droplet_lost:          <%= intervals.droplet_lost          ||  30 %>
  droplets_analysis:     <%= intervals.droplets_analysis     ||  20 %>
  flapping_death:        <%= intervals.flapping_death        ||   1 %>
  flapping_timeout:      <%= intervals.flapping_timeout      || 500 %>
  restart_timeout:       <%= intervals.restart_timeout       ||  20 %>
  min_restart_delay:     <%= intervals.min_restart_delay     ||  60 %>
  max_restart_delay:     <%= intervals.max_restart_delay     || 480 %>
  giveup_crash_number:   <%= intervals.giveup_crash_number   ||   4 %>
  stable_state:          <%= intervals.stable_state          ||  60 %>
  max_db_reconnect_wait: <%= intervals.max_db_reconnect_wait || 300 %>
  inactivity_period_for_spindown: <%= intervals.inactivity_period_for_spindown || -1 %>

dequeueing_rate: <%= properties.health_manager && properties.health_manager.dequeueing_rate || 50 %>
