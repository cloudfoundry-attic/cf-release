#!/bin/bash

RUN_DIR=/var/vcap/sys/run/warden
LOG_DIR=/var/vcap/sys/log/warden
JOB_DIR=/var/vcap/jobs/redis_node
WARDEN_CONF_DIR=/var/vcap/jobs/redis_node/config
FIRSTRUN_PATH=$RUN_DIR/firstrun
QUOTA_FS=/var/vcap/data
PIDFILE=$RUN_DIR/warden.pid
WARDEN_SOURCE_DIR=/var/vcap/packages/redis_node/warden
REDIS_BIN_DIR=/var/vcap/packages/redis/bin
REDIS_CONF_DIR=/var/vcap/jobs/redis_node/config

source /var/vcap/packages/common/utils.sh

case $1 in

  start)
    pid_guard $PIDFILE "Warden"

    mkdir -p $RUN_DIR
    mkdir -p $LOG_DIR
    echo $$ > $PIDFILE

    dpkg --install --skip-same-version /var/vcap/packages/redis_node/libnl1_1.1-5build1_amd64.deb
    dpkg --install --skip-same-version /var/vcap/packages/redis_node/quota_3.17-6_amd64.deb

    rootfs_path=/var/vcap/data/warden/rootfs
    mkdir -p $rootfs_path
    rootfs_tgz=/var/vcap/stemcell_base.tar.gz

    # Extract rootfs if needed
    if [ ! -d $rootfs_path ]
    then
      # Extract to temporary path, then rename to target path.
      # This makes sure that it is not possible that we end up with directory
      # that contains a partially extracted archive.
      tmp_path=$(mktemp --tmpdir=$(dirname $rootfs_path) -d)
      chmod 755 $tmp_path
      tar -C $tmp_path -zxf $rootfs_tgz
      mv $tmp_path $rootfs_path
    fi

    cd /var/vcap/packages/redis_node/warden

    export PATH=/var/vcap/packages/ruby/bin:$PATH

    # Copy redis binaries and configuration files to warden base file system
    cp -f $REDIS_BIN_DIR/* $rootfs_path/usr/bin/
    cp -f $JOB_DIR/bin/redis_startup.sh $rootfs_path/usr/bin
    chmod 755 $rootfs_path/usr/bin/redis_startup.sh
    cp -f $JOB_DIR/config/services.conf $rootfs_path/etc/init/services.conf
    chmod 0644 $rootfs_path/etc/init/services.conf

    exec /var/vcap/packages/ruby/bin/bundle exec \
         rake warden:start[$WARDEN_CONF_DIR/warden.yml] \
         >>$LOG_DIR/warden.stdout.log \
         2>>$LOG_DIR/warden.stderr.log

    ;;

  stop)
    kill_and_wait $PIDFILE

    ;;

  *)
    echo "Usage: warden_ctl {start|stop}"

    ;;

esac
