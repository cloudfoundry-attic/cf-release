#!/bin/bash

export PATH=/var/vcap/packages/ruby/bin:$PATH

RUN_DIR=/var/vcap/sys/run/backup_manager
LOG_DIR=/var/vcap/sys/log/backup_manager
PIDFILE=$RUN_DIR/backup_manager.pid

JOB_DIR=/var/vcap/jobs/backup_manager

<%
  service_backup = properties.service_backup
  backup_enabled = properties.service_backup_manager && properties.service_backup_manager.enable
  nfs_server = service_backup && service_backup.nfs_server
%>

<% if backup_enabled && nfs_server %>
MOUNT_POINT=<%= (service_backup && service_backup.mount_point) || "/var/vcap/services_backup" %>
MT_OPTS="-t nfs"
MT_EXPORT=<%= nfs_server.address %>:<%= nfs_server.export_dir %>
<% end %>

source /var/vcap/packages/common/utils.sh

case $1 in

  start)
    pid_guard $PIDFILE "Backup manager"

    mkdir -p $RUN_DIR
    mkdir -p $LOG_DIR

    echo $$ > $PIDFILE

    <% if properties.syslog_aggregator %>
    /var/vcap/packages/syslog_aggregator/setup_syslog_forwarder.sh $JOB_DIR/config
    <% end %>

    <% if backup_enabled && nfs_server %>
    mkdir -p $MOUNT_POINT
    check_mount "$MT_OPTS" "$MT_EXPORT" "$MOUNT_POINT"
    <% end %>

    exec /var/vcap/packages/backup_manager/services/tools/backup/manager/bin/backup_manager \
         -c $JOB_DIR/config/backup_manager.yml \
         >>$LOG_DIR/backup_manager.stdout.log \
         2>>$LOG_DIR/backup_manager.stderr.log

    ;;

  stop)
    kill_and_wait $PIDFILE

    <% if backup_enabled && nfs_server %>
    umount $MOUNT_POINT
    <% end %>

    ;;

  *)
    echo "Usage: backup_manager_ctl {start|stop}"

    ;;

esac
