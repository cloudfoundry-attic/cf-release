---
<% uaa_db = properties.uaadb.databases.find { |db| db.tag == "uaa" } %>
<% uaa_role = properties.uaadb.roles.find { |role| role.tag == "admin" } %>

<% cc_db = properties.ccdb.databases.find { |db| db.tag == "cc" } %>
<% cc_role = properties.ccdb.roles.find { |role| role.tag == "admin" } %>

name: uaa

database:
  driverClassName: org.postgresql.Driver
  url: jdbc:postgresql://<%= properties.uaadb.address %>:<%= properties.uaadb.port %>/<%= uaa_db.name %>
  username: <%= uaa_role.name %>
  password: <%= uaa_role.password %>

spring_profiles: postgresql

cloud_controller:
  database:
    url: jdbc:postgresql://<%= properties.ccdb.address %>:<%= properties.ccdb.port %>/<%= cc_db.name %>
    username: <%= cc_role.name %>
    password: <%= cc_role.password %>

logging:
  config: /var/vcap/jobs/uaa/config/log4j.properties

<% if properties.uaa.jwt && properties.uaa.jwt.signing_key && properties.uaa.jwt.verification_key %>
jwt:
  token:
    signing-key: |
<%= "        " + properties.uaa.jwt.signing_key.gsub("\n", "\n        ") %>
    verification-key: |
<%= "        " + properties.uaa.jwt.verification_key.gsub("\n", "\n        ") %>
<% elsif properties.uaa.cc && properties.uaa.cc.token_secret %>
jwt:
  token:
    signing-key: <%= properties.uaa.cc.token_secret %>
    verification-key: <%= properties.uaa.cc.token_secret %>
<% end %>

oauth:
  authorize:
    ssl: true
  client:
  <% if properties.uaa.autoapprove %>
    autoapprove: <% properties.uaa.autoapprove.each do |client_id| %>
      - <%= client_id %><% end %>
  <% else %>
    autoapprove:
      - vmc
      - my
      - micro
      - support-signon
      - appdirect
      - dashboard
      - portal
  <% end %>
  clients:
<% if properties.uaa.clients then properties.uaa.clients.marshal_dump.each do |id,client| %>
    <%= id %>:<% client.marshal_dump.each do |key,value|%>
      <%= key %>: <%= value %><% end %><% end %>
<% end %>
<% if !properties.uaa.clients || !properties.uaa.clients.admin %>
    admin:
      authorized-grant-types: client_credentials
      authorities: clients.read,clients.write,clients.secret,uaa.admin
      id: admin
      secret: <%= properties.uaa.admin.client_secret %>
<% end %>
<% if !properties.uaa.clients || !properties.uaa.clients.cloud_controller %>
    cloud_controller:
      authorized-grant-types: client_credentials
      authorities: scim.read,scim.write,password.write
      id: cloud_controller
      secret: <%= properties.uaa.cc.client_secret %>
      access-token-validity: 604800
<% end %>
<% if !properties.uaa.clients || !properties.uaa.clients.vmc %>
    vmc:
      authorized-grant-types: implicit
      scope: cloud_controller.read,cloud_controller.write,openid,password.write
      authorities: uaa.none
      id: vmc
      redirect-uri: http://uaa.cloudfoundry.com/redirect/vmc,https://uaa.cloudfoundry.com/redirect/vmc
      access-token-validity: 604800
<% end %>
<% if !properties.uaa.clients || !properties.uaa.clients.login %>
    login:
      id: login
      secret: <%= properties.uaa.login.client_secret %>
      authorized-grant-types: client_credentials
      authorities: oauth.login
<% end %>
<% if properties.uaa.scim %>
scim:
  userids_enabled: <%= properties.uaa.scim.userids_enabled || false %>
<% else %>
scim:
  userids_enabled: false
<% end %>
<% if properties.uaa.scim && properties.uaa.scim.users then %>
  users: <% properties.uaa.scim.users.each do |user| %>
    - <%= user %><% end %>
<% end %>
<% if !properties.uaa.require_https.nil? %>
require_https: <%= properties.uaa.require_https %>
<% end %>
<% if !properties.uaa.dump_requests.nil? %>
dump_requests: <%= properties.uaa.dump_requests %>
<% end %>

