---
pid: /var/vcap/sys/run/uaa.pid
# nats message bus uri
mbus: nats://<%= properties.nats.user %>:<%= properties.nats.password %>@<%= properties.nats.address %>:<%= properties.nats.port %>/

name: uaa

database:
  driverClassName: org.postgresql.Driver
  url: jdbc:postgresql://<%= properties.uaa.db.address %>:<%= properties.uaa.db.port %>/<%= properties.uaa.db.dbname %>
  username: <%= properties.uaa.db.user %>
  password: <%= properties.uaa.db.password %>

jvm_args: -Xmx512m
spring_profiles: postgresql

cloud_controller:
  database:
    url: jdbc:postgresql://<%= properties.ccdb.address %>:<%= properties.ccdb.port %>/<%= properties.ccdb.dbname %>
    username: <%= properties.ccdb.user %>
    password: <%= properties.ccdb.password %>

logging:
  config: /var/vcap/jobs/uaa/config/log4j.properties

varz:
  username: _random_username_replaced_by_a_script_
  password: _random_password_replaced_by_a_script_
  type: uaa

<% if properties.uaa.cc %>
jwt:
  token:
    key: <%= properties.uaa.cc.token_secret %>
<% end %>

<% if properties.uaa.batch %>
batch:
  username: <%= properties.uaa.batch.username %>
  password: <%= properties.uaa.batch.password %>
<% end %>

oauth:
  clients:
    admin:
      authorized-grant-types: client_credentials
      scope: read,write,password
      authorities: ROLE_CLIENT,ROLE_ADMIN
      id: admin
      secret: <%= properties.uaa.admin.client_secret %>
      resource-ids: clients
    cloud_controller:
      authorized-grant-types: client_credentials
      scope: read,write,password
      authorities: ROLE_CLIENT,ROLE_ADMIN
      id: cloud_controller
      secret: <%= properties.uaa.cc.client_secret %>
      resource-ids: scim,password,tokens
    vmc:
      authorized-grant-types: implicit
      scope: read,password
      authorities: ROLE_UNTRUSTED
      id: vmc
      resource-ids: cloud_controller,password
      redirect-uri: http://uaa.cloudfoundry.com/redirect/vmc
