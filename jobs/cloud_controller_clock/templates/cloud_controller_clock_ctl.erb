#!/bin/bash

export CC_JOB_DIR=/var/vcap/jobs/cloud_controller_clock
export PATH=/var/vcap/packages/ruby/bin:$PATH

CC_PACKAGE_DIR=/var/vcap/packages/cloud_controller_ng

RUN_DIR=/var/vcap/sys/run/cloud_controller_clock
LOG_DIR=/var/vcap/sys/log/cloud_controller_clock
PIDFILE=$RUN_DIR/cloud_controller_clock.pid

export CONFIG_DIR=$CC_JOB_DIR/config
export CLOUD_CONTROLLER_NG_CONFIG=$CONFIG_DIR/cloud_controller_ng.yml
export BUNDLE_GEMFILE=$CC_PACKAGE_DIR/cloud_controller_ng/Gemfile

export C_INCLUDE_PATH=/var/vcap/packages/libpq/include:$C_INCLUDE_PATH
export LIBRARY_PATH=/var/vcap/packages/libpq/lib:$LIBRARY_PATH
export LANG=en_US.UTF-8

source /var/vcap/packages/common/utils.sh

case $1 in

start)
pid_guard $PIDFILE "Cloud controller clock"

mkdir -p $RUN_DIR
mkdir -p $LOG_DIR

chown vcap:vcap $RUN_DIR
chown vcap:vcap $LOG_DIR

echo $$ > $PIDFILE
chown vcap:vcap $PIDFILE

<% if_p("syslog_aggregator") do %>
    # TODO(kowshik): Configure Steno to write to the correct files.
    # Log to syslog agg, Log rotation.
    /var/vcap/packages/syslog_aggregator/setup_syslog_forwarder.sh $CONFIG_DIR
<% end %>

cd $CC_PACKAGE_DIR/cloud_controller_ng
exec chpst -u vcap:vcap bundle exec rake clock:start \<% if properties.syslog_aggregator && properties.syslog_aggregator.address %>
    > >(tee -a >(logger -p user.info -t vcap.clock.stdout) $LOG_DIR/clock.stdout.log) \
    2> >(tee -a >(logger -p user.error -t vcap.clock.stderr) $LOG_DIR/clock.stderr.log)<% else %>
    >>$LOG_DIR/clock.stdout.log \
    2>>$LOG_DIR/clock.stderr.log
<% end %>
;;

stop)
kill_and_wait $PIDFILE
;;

*)
echo "Usage: clock_ctl {start|stop}"
;;

esac
