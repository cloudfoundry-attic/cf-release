---
local_route: <%= spec.networks.send(properties.networks.apps).ip %>
port: 9022 # external CC port
pid_filename: /var/vcap/sys/run/cloud_controller_ng/cloud_controller_ng.pid
nats_uri: nats://<%= properties.nats.user %>:<%= properties.nats.password %>@<%= properties.nats.address %>:<%= properties.nats.port %>

external_domain: <%= properties.ccng.external_host || "api2" %>.<%= properties.domain %>

<% system_domains = properties.ccng.system_domains || [ properties.domain ] %>
system_domains: [ <%= system_domains.join(", ") %> ]

cc_partition: <%= properties.ccng.cc_partition || "ng" %>

bootstrap_admin_email: <%= properties.ccng.bootstrap_admin_email || "sre@vmware.com" %>

bulk_api:
  auth_user: <%= properties.ccng.bulk_api_user || "bulk_api" %>
  auth_password: <%= properties.ccng.bulk_api_password %>

service_lifecycle:
  max_upload_size: 1
  upload_token: <%= properties.serialization_data_server.upload_token %>
  upload_timeout: <%= properties.serialization_data_server.upload_timeout %>
  serialization_data_server: <%= properties.service_lifecycle.serialization_data_server.map {|ip| "http://#{ip}:#{properties.serialization_data_server.port}" } %>

nginx:
  use_nginx: <%= properties.ccng.use_nginx || true %>
  instance_socket: "/var/vcap/sys/run/cloud_controller_ng/cloud_controller.sock"

info:
  name: <%= properties.name || "vcap" %>
  build: <%= properties.build || "\"2222\"" %>
  version: <%= properties.version || 2 %>
  support_address: <%= properties.support_address || "http://support.cloudfoundry.com" %>
  description: <%= properties.description || "VMware's Cloud Application Platform" %>
  api_version: <%= properties.api_version || "2.0.0" %>
# TODO: put back once json schema is sorted out
# allow_debug: false

directories:
<% if properties.directories %>
  droplets: <%= properties.directories.droplets %>
  resources: <%= properties.directories.resources %>
  staging_manifests: <%= properties.directories.staging_manifests %>
  tmpdir: <%= properties.directories.tmpdir %>
<% else %>
  droplets: "/var/vcap/shared/droplets"
  resources: "/var/vcap/shared/resources"
  staging_manifests: "/var/vcap/jobs/cloud_controller_ng/config/staging"
  tmpdir: "/var/vcap/data/cloud_controller_ng/tmp"
<% end %>

logging:
  file: /var/vcap/sys/log/cloud_controller_ng/cloud_controller_ng.log
  <% if properties.syslog_aggregator %>
  syslog: vcap.cloud_controller_ng
  <% end %>
  level: <%= properties.ccng.logging_level || "info" %>
  max_retries: <%= properties.ccng.logging_max_retries || 1 %>

<% db = properties.ccdb_ng.databases.find { |db| db.tag == "cc" } %>
<% db_role = properties.ccdb_ng.roles.find { |role| role.tag == "admin" } %>
db:
  database: postgres://<%= db_role.name %>:<%= db_role.password %>@<%= properties.ccdb_ng.address %>:<%= properties.ccdb_ng.port %>/<%= db.name %>
  max_connections: <%= properties.ccdb_ng.max_connections || 32 %>
  pool_timeout: <%= properties.ccdb_ng.pool_timeout || 10 %>
  log_level: <%= properties.ccng.db_logging_level || "debug2" %>

<% if properties.vcap_redis %>
redis:
  host: <%= properties.vcap_redis.address %>
  port: <%= properties.vcap_redis.port %>
  password: <%= properties.vcap_redis.password %>
<% end %>

uaa:
  url: http://uaa.<%= properties.domain %>
  resource_id: <%= properties.ccng.uaa_resource_id %>
  symmetric_secret: <%= properties.uaa.cc.token_secret %>

# App staging parameters
staging:
  max_staging_runtime: <%= properties.ccng.max_staging_runtime || 300 %>
  auth:
    user: <%= properties.ccng.staging_upload_user %>
    password: <%= properties.ccng.staging_upload_password %>

runtimes_file: /var/vcap/jobs/cloud_controller_ng/config/runtimes.yml
