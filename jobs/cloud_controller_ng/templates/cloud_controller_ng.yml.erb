---
local_route: <%= spec.networks.send(properties.networks.apps).ip %>
port: 9022 # external CC port
pid_filename: /var/vcap/sys/run/cloud_controller_ng/cloud_controller_ng.pid
development_mode: <%= p("ccng.development_mode") %>

message_bus_servers:
<% p("nats.machines").each do |ip| %>
  - nats://<%= p("nats.user") %>:<%= p("nats.password") %>@<%= ip %>:<%= p("nats.port") %>
<% end %>

external_domain:
  - <%= p("ccng.external_host") %>.<%= p("domain") %>

system_domain_organization: <%= p("system_domain_organization") %>
system_domain: <%= p("system_domain") %>
app_domains: [ <%= p("app_domains").join(", ") %> ]

app_events:
  cutoff_age_in_days: <%= p("ccng.app_events.cutoff_age_in_days") %>

app_usage_events:
  cutoff_age_in_days: <%= p("ccng.app_usage_events.cutoff_age_in_days") %>

default_app_memory: <%= p("ccng.default_app_memory") %>

cc_partition: <%= p("ccng.cc_partition") %>

bootstrap_admin_email: <%= p("ccng.bootstrap_admin_email") %>

bulk_api:
  auth_user: <%= p("ccng.bulk_api_user") %>
  auth_password: "<%= p("ccng.bulk_api_password") %>"

nginx:
  use_nginx: <%= p("ccng.use_nginx") %>
  instance_socket: "/var/vcap/sys/run/cloud_controller_ng/cloud_controller.sock"

index: <%= spec.index %>
name: <%= name %>

info:
  name: <%= p("name") %>
  build: "<%= p("build") %>"
  version: <%= p("version") %>
  support_address: <%= p("support_address") %>
  description: <%= p("description") %>
  api_version: <%= p("api_version") %>

<% if_p("ccng.directories.tmpdir") do |tmpdir| %>
directories:
 tmpdir: <%= tmpdir %>
<% end %>

logging:
  file: /var/vcap/sys/log/cloud_controller_ng/cloud_controller_ng.log
  <% if_p("syslog_aggregator") do %>
  syslog: vcap.cloud_controller_ng
  <% end %>
  level: <%= p("ccng.logging_level") %>
  max_retries: <%= p("ccng.logging_max_retries") %>

<% if_p("loggregator_endpoint.host", "loggregator_endpoint.port", "loggregator_endpoint.shared_secret") do |host, port, shared_secret| %>
loggregator:
  router: <%= host %>:<%= port %>
  shared_secret: <%= shared_secret %>
  url: ws<%= "s" if p("logger_endpoint.use_ssl") %>://loggregator.<%= p("system_domain") %>:<%= p("logger_endpoint.port") %>
<% end %>

<% db = p("ccdb_ng.databases").find { |db| db["tag"] == "cc" } %>
<% db_role = p("ccdb_ng.roles").find { |role| role["tag"] == "admin" } %>
db: &db
  database: <%= p("ccdb_ng.db_scheme") == "mysql" ? "mysql2" : p("ccdb_ng.db_scheme") %>://<%= db_role["name"] %>:<%= db_role["password"] %>@<%= p("ccdb_ng.address") %>:<%= p("ccdb_ng.port") %>/<%= db["name"] %>
  max_connections: <%= p("ccdb_ng.max_connections") %>
  pool_timeout: <%= p("ccdb_ng.pool_timeout") %>
  log_level: <%= p("ccng.db_logging_level") %>

<% scheme = p("uaa.no_ssl") ? "http" : "https"
   domain = p("domain") %>

<% if p("login.enabled") %>
login:
  url: <%= p("login.url", "#{scheme}://login.#{domain}") %>
<% end %>
uaa:
  url: <%= p("uaa.url", "#{scheme}://uaa.#{domain}") %>
  resource_id: <%= p("ccng.uaa_resource_id") %>
  <% if_p("uaa.cc.token_secret") do |token_secret| %>
  symmetric_secret: "<%= token_secret %>"
  <% end %>
  verification_key: <%= p("uaa.jwt.verification_key") ? ("|\n      " + p("uaa.jwt.verification_key").gsub("\n", "\n      ")) : '~' %>

# App staging parameters
staging:
  max_staging_runtime: <%= p("ccng.max_staging_runtime") %>
  auth:
    user: <%= p("ccng.staging_upload_user") %>
    password: "<%= p("ccng.staging_upload_password") %>"

maximum_health_check_timeout: <%= p("ccng.maximum_health_check_timeout") %>

runtimes_file: /var/vcap/jobs/cloud_controller_ng/config/runtimes.yml
stacks_file: /var/vcap/jobs/cloud_controller_ng/config/stacks.yml

quota_definitions:
  <% p("ccng.quota_definitions").each do |name, quota_properties| %>
  <%= name %>:<% quota_properties.each do |key,value|%>
    <%= key %>: <%= value %><% end %>
  <% end %>

default_quota_definition: <%= p("ccng.default_quota_definition") %>

resource_pool:
  minimum_size: <%= p("ccng.resource_pool.minimum_size") %>
  maximum_size: <%= p("ccng.resource_pool.maximum_size") %>
  resource_directory_key: <%= p("ccng.resource_pool.resource_directory_key") %>
  <% if_p("ccng.resource_pool.cdn") do %>
  cdn:
    uri: <%= p("ccng.resource_pool.cdn.uri") %>
    key_pair_id: <%= p("ccng.resource_pool.cdn.key_pair_id") %>
    private_key: <%= p("ccng.resource_pool.cdn.private_key").inspect %>
  <% end %>
  fog_connection: <%= p(["ccng.resource_pool.fog_connection", "ccng.default_fog_connection"]).to_json %>

packages:
  app_package_directory_key: <%= p("ccng.packages.app_package_directory_key") %>
  <% if_p("ccng.packages.cdn") do %>
  cdn:
    uri: <%= p("ccng.packages.cdn.uri") %>
    key_pair_id: <%= p("ccng.packages.cdn.key_pair_id") %>
    private_key: <%= p("ccng.packages.cdn.private_key").inspect %>
  <% end %>
  fog_connection: <%= p(["ccng.packages.fog_connection", "ccng.default_fog_connection"]).to_json %>

droplets:
  droplet_directory_key: <%= p("ccng.droplets.droplet_directory_key") %>
  <% if_p("ccng.droplets.cdn") do %>
  cdn:
    uri: <%= p("ccng.droplets.cdn.uri") %>
    key_pair_id: <%= p("ccng.droplets.cdn.key_pair_id") %>
    private_key: <%= p("ccng.droplets.cdn.private_key").inspect %>
  <% end %>
  fog_connection: <%= p(["ccng.droplets.fog_connection", "ccng.default_fog_connection"]).to_json %>

buildpacks:
  buildpack_directory_key: <%= p("ccng.buildpacks.buildpack_directory_key") %>
  <% if_p("ccng.buildpacks.cdn") do %>
  cdn:
    uri: <%= p("ccng.buildpacks.cdn.uri") %>
    key_pair_id: <%= p("ccng.buildpacks.cdn.key_pair_id") %>
    private_key: <%= p("ccng.buildpacks.cdn.private_key").inspect %>
  <% end %>
  fog_connection: <%= p(["ccng.buildpacks.fog_connection", "ccng.default_fog_connection"]).to_json %>

db_encryption_key: <%= p("ccng.db_encryption_key") %>

trial_db:
  guid: "78ad16cf-3c22-4427-a982-b9d35d746914"

tasks_disabled: <%= p("ccng.tasks_disabled") %>
hm9000_noop: <%= p("ccng.hm9000_noop") %>
flapping_crash_count_threshold: <%= p("ccng.flapping_crash_count_threshold") %>

disable_custom_buildpacks: <%= p("ccng.disable_custom_buildpacks") %>

broker_client_timeout_seconds: <%= p("ccng.broker_client_timeout_seconds") %>
