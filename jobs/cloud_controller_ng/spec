---
name: cloud_controller_ng
templates:
  nginx_ctl.erb: bin/nginx_ctl
  nginx.conf.erb: config/nginx.conf
  mime.types: config/mime.types
  cloud_controller_ng.yml.erb: config/cloud_controller_ng.yml
  cloud_controller_ng_ctl.erb: bin/cloud_controller_ng_ctl
  cloud_controller_jobs_ctl.erb: bin/cloud_controller_jobs_ctl
  cloud_controller_clock_ctl.erb: bin/cloud_controller_clock_ctl
  stacks.yml.erb: config/stacks.yml
  syslog_forwarder.conf.erb: config/syslog_forwarder.conf
  nfs-common: config/nfs-common
  idmapd.conf.erb: config/idmapd.conf
  newrelic.yml.erb: config/newrelic.yml

packages:
  - common
  - cloud_controller_ng
  - nginx
  - libpq
  - mysqlclient
  - sqlite
  - ruby
  - syslog_aggregator

properties:
  name:
    default: "vcap"
    description:
  build:
    default: "2222"
    description:
  version:
    default: "2"
    description:
  support_address:
    default: "http://support.cloudfoundry.com"
    description:
  description:
    default: "Cloud Foundry sponsored by Pivotal"
    description:
  api_version:
    default: "2.0.0"
    description:
  domain:
    description: "domain where cloud_controller will listen (api.domain) often the same as the system domain"
  system_domain:
    description: "Domain reserved for CF operator, base URL where the login, uaa, and other non-user apps listen"
  system_domain_organization:
    description: "The User Org that owns the system_domain, required if system_domain is defined"
    default: ""
  app_domains:
    description: "Array of domains for user apps (example: 'user.app.space.foo', a user app called 'neat' will listen at 'http://neat.user.app.space.foo')"

  networks.apps:
    description: "TODO"

  nats.user:
    description: "Username for cc client to connect to NATS"
  nats.password:
    description: "Password for cc client to connect to NATS"
  nats.address:
    description: "IP address of Cloud Foundry NATS server"
  nats.port:
    description: "IP port of Cloud Foundry NATS server"
  nats.machines:
    description: "IP of each NATS cluster member."

  nfs_server.address:
    description: "NFS server for droplets and apps (not used in an AWS deploy, use s3 instead)"
  nfs_server.share:
    description: "NFS server for droplets and apps (not used in an AWS deploy, use s3 instead)"
  nfs_server.nfsv4:
    description: "bool to use NFS4 (not used in an AWS deploy, use s3 instead)"
  nfs_server.idmapd_domain:
    description: "Domain name for NFS idmapd"
    default: "localdomain"
  nfs_server.pipefs_directory:
    description: "Pipefs directory for NFS idmapd"
    default: "/var/lib/nfs/rpc_pipefs"

  ccng.port:
    description: "External Cloud Controller port"
    default: 9022

  ccng.jobs.global.timeout_in_seconds:
    description: "The longest any job can take before it is cancelled unless overriden per job"
    default: 14400 # 4 hours
  ccng.jobs.app_bits_packer.timeout_in_seconds:
    description: "The longest this job can take before it is cancelled"
  ccng.jobs.app_events_cleanup.timeout_in_seconds:
    description: "The longest this job can take before it is cancelled"
  ccng.jobs.app_usage_events_cleanup.timeout_in_seconds:
    description: "The longest this job can take before it is cancelled"
  ccng.jobs.blobstore_delete.timeout_in_seconds:
    description: "The longest this job can take before it is cancelled"
  ccng.jobs.blobstore_upload.timeout_in_seconds:
    description: "The longest this job can take before it is cancelled"
  ccng.jobs.droplet_deletion.timeout_in_seconds:
    description: "The longest this job can take before it is cancelled"
  ccng.jobs.droplet_upload.timeout_in_seconds:
    description: "The longest this job can take before it is cancelled"
  ccng.jobs.model_deletion.timeout_in_seconds:
    description: "The longest this job can take before it is cancelled"

  ccng.app_events.cutoff_age_in_days:
    description: "How old an app event should stay in cloud controller database before being cleaned up"
    default: 31
  ccng.app_usage_events.cutoff_age_in_days:
    description: "How old an app usage event should stay in cloud controller database before being cleaned up"
    default: 31
  ccng.audit_events.cutoff_age_in_days:
    description: "How old an audit event should stay in cloud controller database before being cleaned up"
    default: 31
  ccng.info.name:
    description: "name attribute in the /info endpoint"
  ccng.info.build:
    description: "build attribute in the /info endpoint"
  ccng.info.version:
    description: "version attribute in the /info endpoint"
  ccng.info.support_address:
    description: "URL for the support attribute in the /info endpoint"
  ccng.info.description:
    description: "free form description for attribute in the /info endpoint"
  ccng.api_version:
    description: "API version for cloud_controller. Tells clienets what version to speak to this cloud_controller"

  ccng.directories.tmpdir:
    default: "/var/vcap/data/cloud_controller_ng/tmp"

  ccng.external_host:
    default: "api"
    description: "Host part of the cloud_controller api URI, will be joined with value of 'domain'"
  ccng.cc_partition:
    default: "default"
    description: "Deprecated. Defines a 'partition' for the health_manager job"
  ccng.bootstrap_admin_email:
    default: "admin@example.com"
    description: "Deprecated."

  ccng.bulk_api_user:
    default: "bulk_api"
    description: "User used to access the bulk_api, health_manager uses it to connect to the cc, announced over NATS"
  ccng.bulk_api_password:
    description: "Password used to access the bulk_api, health_manager uses it to connect to the cc, announced over NATS"

  ccng.uaa_resource_id:
    default: "cloud_controller"
    description: "Name of service to register to UAA"

  ccng.db_logging_level:
    default: "debug2"
    description: "Log level for cc database operations"

  ccng.logging_level:
    default: "debug2"
    description: "Log level for cc"
  ccng.logging_max_retries:
    default: 1
    description: "Passthru value for Steno logger"

  ccng.max_staging_runtime:
    default: 900
    description: "Timeout for staging a droplet"
  ccng.maximum_health_check_timeout:
    default: 180
    description: "Maximum health check timeout that can be set for the app"

  ccng.stacks:
    default:
      - name: "lucid64"
        description: "Ubuntu 10.04"
    description: "Tag used by the DEA to describe capabilities (i.e. 'Windows7', 'python-linux'). DEA and CC must agree."

  ccng.staging_upload_user:
    default: ""
    description: "S3 Access key for staging droplets on AWS installs; Blobstore user for other IaaSs"
  ccng.staging_upload_password:
    description: "S3 Secure Access Key for staging droplets on AWS installs; Blobstore password for other IaaSs"

  ccng.quota_definitions:
    description: "Hash of default quota definitions. Overriden by custom quota definitions."

  ccng.default_quota_definition:
    default: default
    description: "Local to use a local (NFS) file system.  AWS to use AWS."

  ccng.default_fog_connection.provider:
    description: "Local fog provider (should always be 'Local'), used if fog_connection hash is not provided in the manifest"
    default: "Local"
  ccng.default_fog_connection.local_root:
    description: "Local root when fog provider is not overridden (should be an NFS mount if using more than one cloud controller)"
    default: "/var/vcap/nfs/shared"

  ccng.resource_pool.minimum_size:
    description: "Minimum size of a resource to add to the pool"
    default: 65536
  ccng.resource_pool.maximum_size:
    description: "Maximum size of a resource to add to the pool"
    default: 536870912
  ccng.resource_pool.resource_directory_key:
    description: "Directory (bucket) used store app resources.  It does not have be pre-created."
    default: "cc-resources"
  ccng.resource_pool.fog_connection:
    description: "Fog connection hash"
  ccng.resource_pool.cdn.uri:
    description: "URI for a CDN to used for resource pool downloads"
    default: ""
  ccng.resource_pool.cdn.private_key:
    description: "Private key for signing download URIs"
    default: ""
  ccng.resource_pool.cdn.key_pair_id:
    description: "Key pair name for signed download URIs"
    default: ""

  ccng.packages.app_package_directory_key:
    description: "Directory (bucket) used store app packages.  It does not have be pre-created."
    default: "cc-packages"
  ccng.packages.fog_connection:
    description: "Fog connection hash"
  ccng.packages.cdn.uri:
    description: "URI for a CDN to used for app package downloads"
    default: ""
  ccng.packages.cdn.private_key:
    description: "Private key for signing download URIs"
    default: ""
  ccng.packages.cdn.key_pair_id:
    description: "Key pair name for signed download URIs"
    default: ""

  ccng.droplets.droplet_directory_key:
    description: "Directory (bucket) used store droplets.  It does not have be pre-created."
    default: "cc-droplets"
  ccng.droplets.fog_connection:
    description: "Fog connection hash"
  ccng.droplets.cdn.uri:
    description: "URI for a CDN to used for droplet downloads"
    default: ""
  ccng.droplets.cdn.private_key:
    description: "Private key for signing download URIs"
    default: ""
  ccng.droplets.cdn.key_pair_id:
    description: "Key pair name for signed download URIs"
    default: ""

  ccng.buildpacks.buildpack_directory_key:
    description: "Directory (bucket) used store buildpacks.  It does not have be pre-created."
    default: "cc-buildpacks"
  ccng.buildpacks.fog_connection:
    description: "Fog connection hash"
  ccng.buildpacks.cdn.uri:
    description: "URI for a CDN to used for buildpack downloads"
    default: ""
  ccng.buildpacks.cdn.private_key:
    description: "Private key for signing download URIs"
    default: ""
  ccng.buildpacks.cdn.key_pair_id:
    description: "Key pair name for signed download URIs"
    default: ""

  ccdb_ng.databases:
    description:
  ccdb_ng.roles:
    description:
  ccdb_ng.db_scheme:
    description:
    default: postgres
  ccdb_ng.address:
    description:
  ccdb_ng.port:
    description:
  ccdb_ng.max_connections:
    default: 25
    description: "Maximum connections for Sequel"
  ccdb_ng.max_ar_connections:
    default: 5
    description: "Maximum connections for ActiveRecord"
  ccdb_ng.pool_timeout:
    default: 10
    description:

  uaa.cc.token_secret:
    description:
  uaa.no_ssl:
    description: "when true, uaa uses http, otherwise it uses https"
    default: false
  uaa.url:
    description:
  login.url:
    description:

  syslog_aggregator.address:
    description: "The address of the syslog_aggregator job."
  syslog_aggregator.port:
    description: "The port used by the syslog_aggregator job."
  uaa.jwt.verification_key:
    default: ""
    description: "ssl cert defined in the manifest by the UAA, required by the cc to communicate with UAA"
  login.enabled:
    default: true
    description: "whether use login as the authorization endpoint or not"


  loggregator_endpoint.host:
    description: "The host used to emit messages to the Loggregator"
  loggregator_endpoint.port:
    description: "The port used to emit messages to the Loggregator"
    default: 3456
  loggregator_endpoint.shared_secret:
    description: "The key used to sign log messages"

  logger_endpoint.use_ssl:
    description: "Whether to use ssl for logger endpoint listed at /v2/info"
    default: true
  logger_endpoint.port:
    description: "Port for logger endpoint listed at /v2/info"
    default: 443

  ccng.db_encryption_key:
    default: ""
    description: "key for encrypting sensitive values in the CC database"

  ccng.tasks_disabled:
    default: false
    description: "Disable tasks endpoint"
  ccng.default_app_memory:
    default: 1024
    description: "How much memory given to an app if not specified"
  ccng.maximum_app_disk_in_mb:
    default: 2048
    description: "The maximum amount of disk a user can request"
  ccng.hm9000_noop:
    default: true
    description: "Disable processing HM9000 messages"
  ccng.flapping_crash_count_threshold:
    default: 3
    description: "The threshold of crashes after which the app is marked as flapping"

  ccng.disable_custom_buildpacks:
    default: false
    description: "Disable external (i.e. git) buildpacks? (Admin buildpacks and system buildpacks only.)"

  ccng.broker_client_timeout_seconds:
    default: 60
    description: "For requests to service brokers, this is the HTTP (open and read) timeout setting."

  ccng.development_mode:
    default: false
    description: "Enable development features for monitoring and insight"

  ccng.newrelic.license_key:
    default: ~
    description: "The api key for NewRelic. Setting this value will activate NewRelic monitoring."
  ccng.newrelic.environment_name:
    default: "development"
    description: "The environment name used by NewRelic"
  ccng.newrelic.developer_mode:
    default: false
    description: "Activate NewRelic developer mode"
  ccng.newrelic.monitor_mode:
    default: false
    description: "Activate NewRelic monitoring"
  ccng.newrelic.log_file_path:
    default: "/var/vcap/sys/log/cloud_controller_ng/newrelic"
    description: "The location for NewRelic to log to"
  ccng.newrelic.capture_params:
    default: false
    description: "Capture and send query params to NewRelic"
  ccng.newrelic.transaction_tracer.enabled:
    default: false
    description: "Enable transaction tracing in NewRelic"
  ccng.newrelic.transaction_tracer.record_sql:
    default: "off"
    description: "NewRelic's SQL statement recording mode: [off | obfuscated | raw]"

  ccng.process_group:
    default: cloud_controller
    description: "Determines what processes to run for the job"
  ccng.jobs.local.number_of_workers:
    default: 2
    description: "Number of local cloud_controller_jobs workers"
  ccng.jobs.generic.number_of_workers:
    default: 1
    description: "Number of generic cloud_controller_jobs workers"

  dea_next.staging_memory_limit_mb:
    description: "Memory limit in mb for staging tasks"
    default: 1024
