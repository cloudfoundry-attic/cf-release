---
<%
service = "rabbit"
plan_enabled = properties.service_plans && properties.service_plans.send(service.to_sym)
plan = properties.plan || "free"
plan_conf = plan_enabled && properties.service_plans.send(service.to_sym).send(plan.to_sym).configuration
lifecycle = properties.service_lifecycle
%>
<% if lifecycle and lifecycle.resque %>
<% snapshot_dir = lifecycle.mount_point || "/var/vcap/services_snapshot" %>
service_name: rabbit
base_dir: /var/vcap/store/rabbit/instances
service_common_dir: /var/vcap/store/rabbitmq_common
service_log_dir: /var/vcap/sys/service-log/rabbit
service_bin_dir:
  '2.4': /var/vcap/packages/rabbitmq-2.4
  '2.8': /var/vcap/packages/rabbitmq-2.8
  erlang: /var/vcap/packages/erlang
image_dir: /var/vcap/store/rabbitmq_image
snapshots_base_dir: <%= snapshot_dir %>
serialization_base_dir: <%= snapshot_dir %>
local_db: sqlite3:/var/vcap/store/rabbit/rabbit_node.db
script_name: /var/vcap/store/rabbitmq_common/bin/backup_or_restore.escript
resque:
  host: <%= lifecycle.resque.host %>
  port: <%= lifecycle.resque.port %>
  password: <%= lifecycle.resque.password %>
  expire: <%= lifecycle.resque.expire %>
logging:
  level: debug
  file: /var/vcap/sys/log/rabbit_node/rabbit_worker.log
  <% if properties.syslog_aggregator %>
  syslog: vcap.rabbit_worker
  <% end %>
index: <%= spec.index %>
node_id: <%= "#{service}_node_#{plan}_#{spec.index}" %>
snapshot_quota: <%= plan_enabled && plan_conf.lifecycle && plan_conf.lifecycle.snapshot && plan_conf.lifecycle.snapshot.quota || 0 %>
# optional download tuning
serialization:
  max_download_size_mb: <%= properties.service_lifecycle.serialization_max_download_size || 10 %>
  max_download_redirects: 5
# Temp directory to save uploaded file
tmp_dir: <%= lifecycle.tmp_dir || "/tmp" %>
download_url_template: "http://<%= lifecycle.download_url %>/serialized/%{service}/%{name}/snapshots/%{snapshot_id}?token=%{token}"
<% end %>
